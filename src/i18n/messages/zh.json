{
  "common": {
    "tools": "工具",
    "language": "语言",
    "theme": "主题",
    "search": "搜索",
    "clear": "清除",
    "copy": "复制",
    "format": "格式化",
    "minify": "压缩",
    "convert": "转换",
    "download": "下载",
    "generate": "生成",
    "input": "输入",
    "output": "输出",
    "upload_file": "上传文件",
    "remove": "移除",
    "copied": "已复制",
    "downloaded": "已下载",
    "error": "错误",
    "success": "成功",
    "copy_failed": "复制失败",
    "home": "首页",
    "coming_soon": "即将推出更多工具...",
    "click_sidebar": "点击左侧菜单使用",
    "actions": "操作",
    "back_to_home": "返回首页",
    "close": "关闭"
  },
  "theme": {
    "light": "亮色模式",
    "dark": "暗黑模式",
    "system": "跟随系统"
  },
  "header": {
    "title": "IT工具集合",
    "subtitle": "开发者必备工具箱"
  },
  "meta": {
    "site": {
      "title": "IT工具集合 - 开发者工具箱",
      "name": "IT工具集合",
      "description": "专为开发者打造的在线工具集合，包含JSON格式化、文本处理、加密解密等实用工具",
      "keywords": "开发者工具,在线工具,JSON工具,数据转换,文本处理,前端工具,工具箱"
    }
  },
  "home": {
    "tools_total": "工具总数",
    "tools_categories": "工具分类",
    "update_frequency": "更新频率",
    "continuously_adding": "持续添加中",
    "cover_main_scenarios": "覆盖主要场景",
    "weekly": "每周",
    "new_tools_features": "新工具和功能",
    "categories_title": "工具分类",
    "popular_tools_title": "热门工具",
    "features_title": "功能特点",
    "tools_count": "{count} 个工具",
    "coming_soon": "即将推出",
    "modern_design": "🎨 现代化设计",
    "modern_design_desc": "基于 shadcn/ui 构建，支持亮色/暗色主题切换，提供优雅的用户体验",
    "multilingual": "🌐 多语言支持", 
    "multilingual_desc": "支持中文和英文界面，满足不同用户的语言偏好",
    "high_performance": "⚡ 高性能",
    "high_performance_desc": "基于 Next.js 和 TypeScript，提供快速响应的用户体验",
    "privacy_protection": "🔒 隐私保护",
    "privacy_protection_desc": "所有工具都在客户端运行，确保您的数据隐私和安全",
    "categories_subtitle": "浏览所有可用的工具类别和功能",
    "popular_tools_subtitle": "最受开发者欢迎的实用工具推荐",
    "features_subtitle": "现代化设计、多语言支持、隐私保护的开发者工具平台"
  },
  "categories": {
    "json_tools": "JSON 实用工具",
    "json_tools_desc": "面向 JSON 的格式化、对比与生成助手",
    "json_converters": "格式转换器",
    "json_converters_desc": "JSON与CSV、YAML、XML格式双向互转",
    "json-tools": "JSON 实用工具",
    "json-converters": "转换器",
    "text": "文本工具",
    "text_desc": "文本处理和转换工具",
    "crypto": "加密工具",
    "crypto_desc": "加密解密和哈希工具",
    "network": "网络工具",
    "network_desc": "网络调试和测试工具",
    "time": "时间工具",
    "time_desc": "时间转换、时间差计算与年龄助手",
    "image": "图片工具",
    "image_desc": "图片处理和转换工具",
    "developer": "开发者工具",
    "developer_desc": "Cron、自动化等高级实用工具",
    "generators": "生成器工具",
    "generators_desc": "UUID、密码等随机数据生成工具",
    "docker": "Docker 工具",
    "docker_desc": "Docker 命令转换和配置生成工具"
  },
  "changelog": {
    "title": "更新日志",
    "description": "查看项目的开发历程和功能更新记录",
    "lastUpdated": "最后更新",
    "footer": "持续更新中，敬请期待更多功能...",
    "meta": {
      "title": "更新日志 - IT工具集合",
      "description": "IT工具集合项目的完整开发历程和功能更新记录",
      "keywords": "更新日志,版本历史,开发历程,功能更新,项目变更"
    }
  },
  "tools": {
    "json-formatter": {
      "name": "JSON格式化器",
      "description": "格式化、验证和压缩JSON数据",
      "placeholder": "请输入JSON数据...",
      "invalid": "无效的JSON格式",
      "formatted": "格式化完成",
      "input_title": "输入 JSON",
      "output_title": "输出结果",
      "output_desc": "格式化后的 JSON 数据",
      "output_placeholder": "格式化后的 JSON 将显示在这里...",
      "introduction": "JSON格式化器是专为开发者设计的强大数据处理工具。它能够快速解析、验证和美化JSON数据，支持实时语法检查、一键格式化和智能压缩功能。无论是API调试、配置文件编辑、数据分析还是代码优化，都能为您提供便捷高效的解决方案。工具完全基于客户端运行，确保您的敏感数据始终安全可靠。",
      "features": [
        "🎯 实时JSON语法验证和智能错误提示",
        "✨ 一键美化格式化，大幅提升代码可读性",
        "📦 智能压缩功能，有效减少数据传输体积",
        "📋 快速复制到剪贴板和便捷文件下载",
        "🔒 完全客户端处理，保护数据隐私安全",
        "⚡ 支持大文件处理，响应速度极快",
        "🎨 支持亮色/暗色主题，护眼舒适",
        "📱 完美适配移动端，随时随地使用"
      ],
      "faq": [
        {
          "question": "JSON格式化工具支持哪些核心功能？",
          "answer": "我们的JSON格式化工具提供全方位的JSON处理功能：实时语法验证、一键美化格式、智能压缩、快速复制、文件下载等。所有操作都在您的浏览器本地完成，无需担心数据泄露风险。"
        },
        {
          "question": "如何快速识别和修复JSON格式错误？",
          "answer": "工具内置智能错误检测系统，会实时分析您输入的JSON数据。当检测到语法错误时，会在输入框下方显示详细的错误信息和错误位置，帮助您快速定位问题并进行修复。"
        },
        {
          "question": "工具是否支持处理大型JSON文件？",
          "answer": "是的，我们的工具经过性能优化，可以流畅处理大型JSON文件。建议单个文件大小不超过10MB，以确保最佳的用户体验。对于超大文件，建议先进行适当分割处理。"
        },
        {
          "question": "数据安全性如何保障？",
          "answer": "我们非常重视数据安全。所有JSON处理操作都在您的本地浏览器中完成，数据不会上传到任何服务器。您的敏感信息始终在您的控制范围内，完全保护隐私安全。"
        },
        {
          "question": "工具是否兼容移动设备？",
          "answer": "完全兼容！我们的JSON格式化工具采用响应式设计，在手机、平板、桌面设备上都能提供优质的使用体验。支持触屏操作，界面自适应不同屏幕尺寸。"
        }
      ],
      "meta": {
        "title": "JSON格式化工具 - 在线美化/压缩/验证",
        "description": "免费在线JSON格式化工具,支持美化、压缩、语法验证,实时高亮显示错误,一键复制下载,提升开发效率。",
        "keywords": "JSON格式化, JSON美化, JSON验证"
      }
    },
    "json-to-csv": {
      "name": "JSON⇄CSV转换器",
      "description": "JSON与CSV格式互相转换",
      "placeholder": "请输入JSON数据（对象数组或单个对象）...",
      "csv_placeholder": "请输入CSV数据（第一行为表头）...",
      "invalid": "无效的JSON格式",
      "invalid_csv": "无效的CSV格式",
      "invalid_format": "请输入有效的JSON对象或对象数组",
      "input_title": "输入 JSON",
      "input_desc": "输入要转换的 JSON 数据",
      "csv_input_title": "输入 CSV",
      "csv_input_desc": "输入要转换的 CSV 数据",
      "output_title": "输出 CSV",
      "output_desc": "转换后的 CSV 数据",
      "json_output_title": "输出 JSON",
      "json_output_desc": "转换后的 JSON 数据",
      "output_placeholder": "转换后的 CSV 将显示在这里...",
      "json_output_placeholder": "转换后的 JSON 将显示在这里...",
      "usage_title": "使用说明",
      "rows_columns": "{rows} 行 × {columns} 列",
      "usage_array_format": "• 支持 JSON 对象数组格式：",
      "usage_array_example": "['{\"name\":\"John\",\"age\":25}', ...]",
      "usage_object_format": "• 支持单个 JSON 对象格式：",
      "usage_object_example": "'{\"name\":\"John\",\"age\":25}'",
      "usage_nested_flatten": "• 嵌套对象会被扁平化：",
      "usage_nested_examples": "user.name、user.address.city",
      "usage_array_stringify": "• 数组值会被转换为 JSON 字符串",
      "usage_csv_escape": "• 自动处理 CSV 特殊字符的转义",
      "introduction": "JSON⇄CSV双向转换器是专业的数据格式转换工具，支持JSON与CSV之间的双向转换。可以将复杂的JSON数据结构快速转换为标准CSV格式，也可以将CSV表格数据解析为JSON对象数组。支持嵌套对象扁平化处理，智能识别数据类型并进行格式化输出。无论是数据分析、报表生成还是数据迁移，都能提供高效准确的解决方案。",
      "features": [
        "🔄 JSON与CSV双向转换，一键切换转换方向",
        "📊 支持JSON对象数组和单对象转换",
        "🔀 智能嵌套对象扁平化和反扁平化",
        "📋 自动CSV特殊字符转义和格式化",
        "💾 一键下载转换后的文件",
        "🎯 支持复杂数据结构解析",
        "⚡ 高性能处理大型数据集",
        "🔒 客户端处理，数据安全可靠"
      ],
      "faq": [
        {
          "question": "支持哪些JSON数据格式转换？",
          "answer": "工具支持两种主要JSON格式：对象数组格式（如用户列表、产品数据）和单个对象格式。对于复杂嵌套结构，会自动进行扁平化处理，确保CSV格式的兼容性。"
        },
        {
          "question": "如何处理嵌套对象和数组？",
          "answer": "嵌套对象会自动扁平化为多列（如user.name、user.address.city），数组值会转换为JSON字符串格式保存。这样既保持了数据完整性，又确保了CSV格式的标准性。"
        },
        {
          "question": "转换后的CSV文件能直接在Excel中打开吗？",
          "answer": "是的，转换生成的CSV文件完全符合标准格式，可以直接在Excel、Numbers、Google Sheets等电子表格软件中打开和编辑。"
        },
        {
          "question": "处理大型JSON文件时性能如何？",
          "answer": "工具经过性能优化，可以高效处理包含数千条记录的大型JSON文件。建议单次处理的数据量不超过50MB，以确保最佳用户体验。"
        }
      ],
      "meta": {
        "title": "JSON转CSV转换器 - 在线免费转换",
        "description": "在线JSON转CSV转换工具,支持嵌套对象和数组智能处理,一键下载CSV文件,完全免费无限制。",
        "keywords": "JSON转CSV, JSON转换器, CSV导出"
      }
    },
    "json-to-yaml": {
      "name": "JSON⇄YAML转换器",
      "description": "JSON与YAML格式互相转换",
      "placeholder": "请输入JSON数据...",
      "yaml_placeholder": "请输入YAML数据...",
      "invalid": "无效的JSON格式",
      "invalid_json": "无效的JSON格式",
      "invalid_yaml": "无效的YAML格式",
      "convert": "转换",
      "input_title": "输入 JSON",
      "input_desc": "输入要转换的 JSON 数据",
      "yaml_input_title": "输入 YAML",
      "yaml_input_desc": "输入要转换的 YAML 数据",
      "output_title": "输出 YAML",
      "output_desc": "转换后的 YAML 数据",
      "json_output_title": "输出 JSON",
      "json_output_desc": "转换后的 JSON 数据",
      "output_placeholder": "转换后的 YAML 将显示在这里...",
      "json_output_placeholder": "转换后的 JSON 将显示在这里...",
      "introduction": "JSON⇄YAML双向转换器是专为配置文件管理和数据交换设计的格式转换工具。支持JSON与YAML格式之间的无损双向转换，支持复杂嵌套对象、数组结构，自动生成具有良好缩进的输出。适用于DevOps、配置管理、API文档等多种场景。",
      "features": [
        "🔄 JSON与YAML双向转换，一键切换转换方向",
        "📝 自动生成标准格式缩进",
        "🎯 支持复杂嵌套对象和数组",
        "📋 保持数据类型和结构完整性",
        "💾 快速下载转换后的文件",
        "⚡ 实时转换，即时预览效果",
        "🎨 支持亮色/暗色主题",
        "🔒 本地处理，确保数据安全"
      ],
      "faq": [
        {
          "question": "JSON转YAML适用于哪些场景？",
          "answer": "主要适用于配置文件转换（如Docker Compose、Kubernetes配置）、API文档格式转换、数据交换格式变更等场景。YAML格式更易读，特别适合人工编辑和维护。"
        },
        {
          "question": "转换过程中数据类型会丢失吗？",
          "answer": "不会。我们的转换器严格保持数据类型完整性，包括字符串、数字、布尔值、数组、对象等所有JSON支持的数据类型都会准确映射到YAML格式。"
        },
        {
          "question": "生成的YAML文件符合标准格式吗？",
          "answer": "是的，生成的YAML文件完全符合YAML 1.2标准规范，可以被任何标准YAML解析器正确读取，包括Python PyYAML、Ruby YAML、Go yaml等。"
        },
        {
          "question": "如何处理特殊字符和换行符？",
          "answer": "工具会自动处理YAML中的特殊字符转义，对于包含换行符、引号等特殊内容的字符串，会采用适当的YAML语法（如多行字符串、引号包围等）确保格式正确。"
        }
      ],
      "meta": {
        "title": "JSON转YAML转换器 - 配置文件转换",
        "description": "在线JSON转YAML转换工具,专为配置文件转换设计,支持格式化输出和语法验证,一键下载YAML文件。",
        "keywords": "JSON转YAML, YAML转换器, 配置文件转换"
      }
    },
    "json-to-xml": {
      "name": "JSON⇄XML转换器",
      "description": "JSON与XML格式互相转换",
      "placeholder": "请输入JSON数据...",
      "invalid": "无效的JSON格式",
      "convert_button": "转换",
      "input_title": "输入 JSON",
      "input_desc": "输入要转换的 JSON 数据",
      "xml_input_title": "输入 XML",
      "xml_input_desc": "输入要转换的 XML 数据",
      "output_title": "输出 XML",
      "output_desc": "转换后的 XML 数据",
      "json_output_title": "输出 JSON",
      "json_output_desc": "转换后的 JSON 数据",
      "input_placeholder": "请输入要转换的JSON数据...",
      "xml_input_placeholder": "请输入要转换的XML数据...",
      "output_placeholder": "转换后的XML将显示在这里...",
      "json_output_placeholder": "转换后的JSON将显示在这里...",
      "root_element": "根元素名称",
      "errors": {
        "empty_input": "请输入数据",
        "invalid_json": "输入的JSON格式无效",
        "invalid_xml": "输入的XML格式无效"
      },
      "success": "转换成功",
      "conversion_complete": "JSON转XML转换完成",
      "xml_copied": "XML数据已复制到剪贴板",
      "xml_downloaded": "XML文件已下载",
      "introduction": "JSON⇄XML双向转换器是专业的数据格式转换工具，实现JSON与XML之间的精确双向转换。XML(可扩展标记语言)广泛应用于Web服务、配置文件、数据交换等场景，具有良好的可读性和结构化特性。支持自定义根元素名称，智能处理嵌套对象和数组结构，确保转换后的格式规范、可读性强，满足各种数据集成和系统间通信需求。",
      "features": [
        "🔄 JSON与XML双向转换，一键切换转换方向",
        "🏷️ JSON转XML时可自定义根元素名称",
        "🎯 智能处理嵌套对象和数组结构",
        "⚡ 实时转换处理，输入即时生成结果",
        "📋 一键复制转换结果，便于集成开发",
        "💾 支持文件下载，方便数据保存和传输",
        "🔒 本地处理保护隐私，数据不会上传到服务器",
        "📱 响应式设计，支持移动端和桌面端操作"
      ],
      "faq": [
        {
          "question": "JSON转XML适用于什么场景？为什么需要这种转换？",
          "answer": "JSON转XML主要适用于系统集成、数据交换、配置文件转换等场景。许多传统系统和企业级应用仍然使用XML格式进行数据交换，而现代Web API多使用JSON。这个工具帮助开发者在不同系统之间进行数据格式转换，确保数据兼容性。"
        },
        {
          "question": "转换过程中如何处理JSON数组？",
          "answer": "我们的工具智能处理JSON数组，将其转换为XML中的重复元素。例如，JSON中的数组`[\"item1\", \"item2\"]`会转换为多个同名XML元素。对于复杂的对象数组，每个对象都会成为一个独立的XML元素，保持原有的数据结构。"
        },
        {
          "question": "如何自定义XML的根元素名称？",
          "answer": "工具提供了根元素名称自定义功能，您可以根据需要设置合适的根元素名称。这对于符合特定XML Schema或与特定系统集成非常重要。如果不指定，系统会使用默认的根元素名称。"
        },
        {
          "question": "转换后的XML是否符合标准格式？",
          "answer": "是的，我们的工具生成的XML完全符合W3C XML标准。转换后的XML具有正确的语法结构、适当的缩进格式，可以被任何标准的XML解析器正确解析。同时支持特殊字符的正确转义处理。"
        },
        {
          "question": "如何处理JSON中的特殊字符和空值？",
          "answer": "工具会自动处理XML中的特殊字符转义，如将`<`转换为`&lt;`，`&`转换为`&amp;`等。对于JSON中的`null`值，会转换为空的XML元素或特殊属性标记，确保数据的完整性和XML的有效性。"
        }
      ],
      "meta": {
        "title": "JSON转XML转换器 - 数据交换工具",
        "description": "在线JSON转XML转换器,支持自定义根元素、智能处理嵌套数据,适用于API数据交换和配置文件转换。",
        "keywords": "JSON转XML, XML转换器, 数据交换"
      }
    },
    "xml-to-json": {
      "name": "XML转JSON转换器",
      "description": "将XML数据快速转换为JSON格式",
      "input_title": "输入 XML",
      "input_desc": "粘贴或输入要转换的 XML 数据",
      "output_title": "输出 JSON",
      "output_desc": "转换后的 JSON 数据",
      "placeholder": "请输入要转换的XML数据...",
      "output_placeholder": "转换后的JSON将显示在这里...",
      "invalid_xml": "无效的XML格式，请检查输入",
      "convert_success": "转换成功！",
      "introduction": "XML转JSON转换器是专业的数据格式转换工具，能够将XML(可扩展标记语言)数据精确转换为JSON格式。XML广泛应用于配置文件、Web服务、数据交换等场景，而JSON是现代Web开发的主流数据格式。本工具智能解析XML结构，保留原始数据的层次关系和类型信息，生成规范的JSON输出，支持复杂的嵌套结构、属性处理，是开发者进行API集成、数据迁移、格式转换的理想工具。",
      "features": [
        "⚡ 快速转换，实时预览转换结果",
        "🎯 智能解析，准确处理XML标签、属性和文本内容",
        "🔄 保持结构，完整保留数据的层次关系",
        "📋 一键复制，快速使用转换后的JSON数据",
        "💾 支持下载，方便保存和分享转换结果",
        "🔒 本地处理，数据安全不上传服务器",
        "✨ 格式化输出，生成易读的JSON格式",
        "📱 响应式设计，支持移动端和桌面端"
      ],
      "faq": [
        {
          "question": "什么是XML转JSON？为什么需要这种转换？",
          "answer": "XML转JSON是将XML格式的数据转换为JSON格式的过程。许多传统系统使用XML格式，而现代Web API和JavaScript应用更倾向于使用JSON。这个工具帮助开发者在不同系统间进行数据格式转换，提高开发效率和数据兼容性。"
        },
        {
          "question": "转换过程中XML属性会如何处理？",
          "answer": "XML元素的属性会被转换为JSON对象中的特殊字段。通常使用'@'前缀或'_attributes'对象来保存属性值，确保属性信息不会丢失，同时与元素内容区分开来。"
        },
        {
          "question": "如何处理重复的XML元素？",
          "answer": "当XML中存在多个同名元素时，工具会智能地将它们转换为JSON数组。例如，多个<item>元素会被转换为一个items数组，保持所有数据完整性。"
        },
        {
          "question": "转换后的JSON格式是否标准？",
          "answer": "是的，工具生成的JSON完全符合JSON标准规范，具有正确的语法结构和格式化缩进，可以被任何JSON解析器正确解析和处理。"
        },
        {
          "question": "数据转换是否安全？会上传到服务器吗？",
          "answer": "完全安全！所有转换操作都在您的浏览器本地完成，数据不会上传到任何服务器。这确保了您的敏感数据和隐私得到最大程度的保护。"
        }
      ],
      "meta": {
        "title": "XML转JSON转换器 - 在线解析工具",
        "description": "在线XML转JSON转换器,支持属性解析、复杂嵌套结构处理,提供格式化输出和一键复制下载功能。",
        "keywords": "XML转JSON, XML解析器, XML转换器"
      }
    },
    "json-visualizer": {
      "name": "JSON可视化",
      "description": "以树形结构展示JSON数据",
      "placeholder": "请输入JSON数据...",
      "parse_button": "解析JSON",
      "input_placeholder": "请输入要可视化的JSON数据...",
      "visualization": "可视化",
      "tree_view": "树形视图",
      "raw_view": "原始视图",
      "no_data": "暂无数据，请先解析JSON",
      "type": "类型",
      "size": "大小",
      "depth": "深度",
      "errors": {
        "empty_input": "请输入JSON数据",
        "invalid_json": "输入的JSON格式无效"
      },
      "success": "解析成功",
      "parse_complete": "JSON解析完成",
      "json_copied": "JSON数据已复制到剪贴板",
      "introduction": "JSON可视化工具是专业的数据结构展示和分析工具，能够将复杂的JSON数据转换为直观的树形结构图。通过交互式的可视化界面，用户可以清晰地理解JSON数据的层次关系、类型结构和内容组织。工具支持数据节点的展开折叠、类型标识、统计信息显示等功能，是开发者调试API响应、分析配置文件、理解数据结构的得力助手。",
      "features": [
        "🌳 交互式树形结构显示，清晰展现JSON层次关系",
        "🔍 智能类型识别和图标标注，一目了然的数据类型",
        "📊 实时统计信息显示，包含数据大小、深度等关键指标",
        "⚡ 大数据支持，流畅处理复杂嵌套的JSON结构",
        "🎯 节点展开折叠功能，按需查看数据细节",
        "📋 快速复制JSON路径和节点值，提升开发效率",
        "🎨 优雅的UI设计，支持亮色暗色主题切换",
        "📱 响应式适配，移动端和桌面端完美体验"
      ],
      "faq": [
        {
          "question": "JSON可视化工具有什么优势？适用于哪些场景？",
          "answer": "JSON可视化工具将抽象的JSON数据转换为直观的树形图，帮助快速理解复杂的数据结构。特别适用于API调试、配置文件分析、数据结构学习、后端响应查看等场景。相比纯文本查看，可视化能大幅提升数据理解效率。"
        },
        {
          "question": "工具能处理多大的JSON文件？性能如何？",
          "answer": "我们的可视化工具经过性能优化，可以流畅处理包含数千个节点的大型JSON文件。对于超大文件，建议单次处理不超过5MB，以确保最佳的交互体验。工具采用虚拟渲染技术，即使大数据量也能保持界面响应性。"
        },
        {
          "question": "如何快速定位JSON中的特定数据？",
          "answer": "工具提供了多种定位方式：1）使用树形结构的展开折叠功能逐级查看；2）节点类型图标帮助快速识别数据类型；3）统计信息显示帮助了解数据规模；4）支持复制JSON路径，便于在代码中精确访问数据。"
        },
        {
          "question": "可视化视图和原始视图有什么区别？",
          "answer": "可视化视图以树形结构展示JSON，提供交互式的数据探索体验，适合理解数据结构和关系。原始视图显示格式化的JSON文本，保持数据的原始形式，适合复制粘贴和代码编辑。两种视图可以随时切换，满足不同使用需求。"
        },
        {
          "question": "工具是否支持JSON数据的编辑和修改？",
          "answer": "当前版本专注于JSON数据的可视化展示和分析，暂不支持直接编辑。用户可以复制需要的数据片段，在外部编辑器中修改后重新导入。我们的设计理念是提供最佳的数据查看和理解体验，确保工具的专业性和稳定性。"
        }
      ],
      "meta": {
        "title": "JSON可视化工具 - 树形查看器",
        "description": "交互式JSON树形可视化工具,支持展开折叠节点、类型标识和数据统计,直观分析JSON结构。",
        "keywords": "JSON可视化, JSON查看器, JSON树形"
      }
    },
    "json-generator": {
      "name": "JSON数据生成器",
      "description": "生成模拟JSON数据用于测试",
      "configuration": "配置",
      "record_count": "记录数量",
      "output_format": "输出格式",
      "array_format": "数组格式",
      "object_format": "对象格式",
      "fields": "字段配置",
      "add_field": "添加字段",
      "field_name": "字段名称",
      "min_value": "最小值",
      "max_value": "最大值",
      "length": "长度",
      "field_type": "字段类型", 
      "string_length": "字符串长度",
      "array_length": "数组长度",
      "generate_button": "生成数据",
      "output_placeholder": "生成的JSON数据将显示在这里...",
      "generation_complete": "已生成 {count} 条记录",
      "generation_failed": "数据生成失败",
      "json_copied": "JSON数据已复制到剪贴板",
      "json_downloaded": "JSON文件已下载",
      "output_info": "输出大小: {size} KB",
      "success": "生成成功",
      "introduction": "JSON数据生成器是专业的模拟数据创建工具，能够快速生成符合指定格式的JSON测试数据。支持多种数据类型配置，包括字符串、数字、布尔值、日期、数组等，可自定义字段结构和数据范围。广泛应用于前端开发测试、API接口调试、数据库填充、性能测试等场景，帮助开发者高效生成大量结构化的mock数据，提升开发和测试效率。",
      "features": [
        "🎯 多种数据类型支持，字符串、数字、布尔值、日期全覆盖",
        "⚙️ 灵活的字段配置系统，自定义字段名称和数据规则",
        "📊 批量数据生成，支持1-10000条记录快速生成",
        "🔧 智能数据范围控制，设置最小最大值和长度限制",
        "📋 多种输出格式，支持数组和单对象格式输出",
        "💾 便捷数据导出，一键复制和下载JSON文件",
        "⚡ 高性能生成引擎，大批量数据快速处理",
        "🎨 直观的配置界面，可视化配置生成规则"
      ],
      "faq": [
        {
          "question": "JSON数据生成器支持哪些数据类型？如何配置？",
          "answer": "工具支持字符串、整数、浮点数、布尔值、日期时间、数组等多种数据类型。每种类型都有专门的配置选项，如字符串可设置长度范围，数字可设置最小最大值，日期可设置时间范围等。通过字段配置面板可以轻松添加和自定义各种字段。"
        },
        {
          "question": "如何生成符合特定业务场景的测试数据？",
          "answer": "可以通过组合不同的字段类型来模拟真实业务数据。例如，用户数据可包含姓名(字符串)、年龄(数字)、注册日期(日期)等字段。工具允许为每个字段设置合适的数据范围和格式，确保生成的数据贴近实际业务需求。"
        },
        {
          "question": "生成的数据量有限制吗？性能如何？",
          "answer": "工具支持生成1-10000条记录，可以满足大多数测试场景需求。生成引擎经过优化，即使是大批量数据也能在秒级完成。对于超大数据集需求，建议分批生成，或使用专门的数据库填充工具。"
        },
        {
          "question": "生成的JSON数据如何在开发中使用？",
          "answer": "生成的JSON数据可以直接复制到代码中作为mock数据，也可以下载为文件导入到数据库或API测试工具中。支持数组格式(适合列表数据)和对象格式(适合单条记录)，方便集成到不同的开发和测试环境。"
        },
        {
          "question": "如何确保生成数据的质量和一致性？",
          "answer": "工具内置数据验证机制，确保生成的数据符合设定的规则和类型约束。支持设置数据范围、格式规则等，保证数据的合理性。同时，生成的数据具有良好的随机性分布，避免数据过于规律化影响测试效果。"
        }
      ],
      "meta": {
        "title": "JSON数据生成器 - 模拟测试数据生成",
        "description": "在线JSON模拟数据生成器,支持多种数据类型、灵活字段配置和批量生成,满足开发测试需求。",
        "keywords": "JSON生成器, 模拟数据, 测试数据"
      }
    },
    "json-diff": {
      "name": "JSON差异对比",
      "description": "比较两个JSON数据的差异",
      "original": "原始数据",
      "modified": "修改后数据",
      "left_placeholder": "请输入原始JSON数据...",
      "right_placeholder": "请输入修改后的JSON数据...",
      "compare_button": "对比差异",
      "differences": "差异结果",
      "show_unchanged": "显示未更改",
      "hide_unchanged": "隐藏未更改",
      "no_differences": "没有发现差异",
      "total": "总计",
      "added_count": "新增",
      "removed": "删除",
      "modified_count": "修改",
      "unchanged": "未更改",
      "errors": {
        "empty_input": "请输入两个JSON数据",
        "invalid_json": "输入的JSON格式无效",
        "render_failed": "差异渲染失败",
        "format_failed": "差异格式化失败",
        "download_failed": "下载失败"
      },
      "success": "对比成功",
      "comparison_complete": "发现 {count} 处差异",
      "report_copied": "差异报告已复制到剪贴板",
      "diff_copied": "差异数据已复制到剪贴板",
      "diff_downloaded": "差异文件已下载",
      "identical_objects": "两个对象完全相同",
      "no_differences_found": "未发现任何差异",
      "delta_changes": "差异详情",
      "advanced_options": "高级选项",
      "view_mode": "查看模式",
      "diff_format": "差异格式",
      "detect_moves": "检测移动",
      "visual_mode": "可视化模式",
      "json_mode": "JSON模式",
      "raw_mode": "原始模式",
      "annotated_format": "注释格式",
      "delta_format": "差异格式",
      "changes_detected": "检测到 {count} 处变更",
      "using_jsondiffpatch": "使用 jsondiffpatch",
      "comparison_result": "对比结果",
      "side_by_side": "并排对比",
      "inline_mode": "内联模式", 
      "inline_diff_view": "内联差异视图",
      "show_only_differences": "仅显示差异",
      "deleted": "删除",
      "added_item": "新增",
      "moved": "移动",
      "deleted_marked_red": "删除内容标红",
      "added_marked_green": "新增内容标绿",
      "unified_mode": "统一模式",
      "unified_diff_view": "统一差异视图",
      "detect_moves_explanation_title": "移动检测功能说明",
      "detect_moves_explanation": "开启时能智能识别数组元素的位置变化，关闭时会将移动识别为删除+新增操作",
      "example": "例子",
      "with_move_detection": "开启移动检测",
      "without_move_detection": "关闭移动检测",
      "moved_from_index": "从索引",
      "to_index": "移动到索引",
      "delete_and_add_separately": "分别显示删除索引0的A，新增索引1的A",
      "move_detection_enabled": "移动检测已开启",
      "move_detection_disabled": "移动检测已关闭",
      "recalculated": "重新计算",
      "differences_only": "仅差异",
      "showing_differences_only": "仅显示差异部分",
      "introduction": "JSON差异对比工具是专业的数据变更分析工具，能够深度比较两个JSON数据之间的差异，提供精确的变更检测和可视化展示。基于先进的jsondiffpatch算法，支持智能识别数据的新增、删除、修改和移动操作，为版本控制、数据审计、API测试、配置比较等场景提供强大的分析能力。工具提供多种对比模式和输出格式，帮助开发者快速定位和理解数据变化。",
      "features": [
        "🔍 深度差异检测，精确识别新增、删除、修改和移动操作",
        "🎯 智能移动检测，区分数组元素位置变化和增删操作",
        "📊 多种可视化模式，并排对比、内联显示、统一视图",
        "⚡ 高性能算法引擎，快速处理大型JSON数据对比",
        "📋 丰富的输出格式，支持JSON格式和可读性报告",
        "🎨 颜色标识差异类型，直观展示数据变更状态",
        "💾 便捷结果导出，一键复制和下载差异报告",
        "🔧 高级配置选项，自定义对比规则和显示方式"
      ],
      "faq": [
        {
          "question": "JSON差异对比工具如何识别不同类型的变更？",
          "answer": "工具采用jsondiffpatch算法，能够智能识别四种变更类型：新增(绿色标识)、删除(红色标识)、修改(黄色标识)和移动(蓝色标识)。通过深度遍历JSON结构，精确定位变更位置和内容，提供完整的差异分析报告。"
        },
        {
          "question": "移动检测功能有什么作用？何时需要开启？",
          "answer": "移动检测能够识别数组元素的位置变化，区分真正的移动操作和删除+新增操作。对于数组数据的顺序调整、列表重排等场景非常有用。如果只关心内容变化而不关心位置，可以关闭此功能以简化差异报告。"
        },
        {
          "question": "工具支持哪些对比模式？各有什么特点？",
          "answer": "提供三种对比模式：1）并排对比-左右显示原始和修改版本，便于整体对照；2）内联模式-在同一视图中标识差异，节省屏幕空间；3）统一模式-类似Git diff的展示方式，适合程序员查看。可根据使用习惯选择最合适的模式。"
        },
        {
          "question": "如何处理大型JSON文件的对比？性能如何？",
          "answer": "工具经过性能优化，采用高效的差异算法，可以处理包含数千个节点的大型JSON文件。建议单个文件不超过10MB以确保最佳性能。对于超大文件，可以先提取关键部分进行对比，或使用专门的文件比较工具。"
        },
        {
          "question": "差异报告可以导出保存吗？支持哪些格式？",
          "answer": "支持多种导出方式：1）复制差异报告文本到剪贴板；2）复制JSON格式的差异数据；3）下载完整的差异文件。导出的报告保留颜色标识和格式，便于保存归档或分享给团队成员进行代码审查和数据分析。"
        }
      ],
      "meta": {
        "title": "JSON差异对比工具 - 在线对比分析",
        "description": "在线JSON差异对比工具,深度分析两个JSON文件的差异,提供可视化报告,快速定位数据变更。",
        "keywords": "JSON对比, JSON差异, 差异分析"
      }
    },
    "base64-encoder-decoder": {
      "name": "Base64 编码解码",
      "description": "Base64 字符串编码和解码工具",
      "placeholder": "请输入要编码/解码的文本...",
      "encode": "编码",
      "decode": "解码",
      "input_title": "输入文本",
      "output_title": "输出结果",
      "output_desc": "编码/解码后的文本",
      "output_placeholder": "编码/解码结果将显示在这里...",
      "invalid_base64": "无效的 Base64 格式",
      "introduction": "Base64编码解码器是专业的字符串编码转换工具，支持文本、二进制数据和Base64格式之间的双向转换。广泛应用于Web开发、数据传输、邮件附件、图片编码等场景。采用标准Base64字符集，确保编码解码的准确性和兼容性，是开发者和技术人员的必备工具。",
      "features": [
        "🔄 支持文本到Base64的双向编码解码",
        "📝 实时转换，输入即时显示结果",
        "🎯 标准Base64字符集，兼容性强",
        "📋 一键复制结果到剪贴板",
        "🔍 自动识别和验证Base64格式",
        "⚡ 高性能处理，支持大文本转换",
        "🔒 本地处理，保护数据隐私安全",
        "📱 响应式设计，移动端完美适配"
      ],
      "faq": [
        {
          "question": "Base64编码有什么用途？",
          "answer": "Base64主要用于：1）在HTTP协议中传输二进制数据；2）邮件系统附件编码；3）URL安全的数据传输；4）图片转换为文本格式；5）API认证token编码。它将二进制数据转换为可打印的ASCII字符。"
        },
        {
          "question": "Base64编码后的数据会变大吗？",
          "answer": "是的，Base64编码会使数据大小增加约33%。这是因为Base64使用64个字符表示256种可能，每3个字节被编码为4个字符。虽然数据变大，但换来了在文本协议中传输二进制数据的能力。"
        },
        {
          "question": "工具支持哪些字符编码？",
          "answer": "我们的工具支持UTF-8字符编码，可以正确处理中文、英文、特殊符号等各种字符。输入的文本会先转换为UTF-8字节序列，然后进行Base64编码，确保国际化文本的正确处理。"
        },
        {
          "question": "如何验证Base64格式是否正确？",
          "answer": "有效的Base64字符串只包含A-Z、a-z、0-9、+、/字符，长度必须是4的倍数，末尾可能有1-2个'='作为填充。我们的工具会自动验证格式，并在解码失败时给出错误提示。"
        },
        {
          "question": "Base64编码是加密吗？",
          "answer": "不，Base64是编码而非加密。它只是数据的表示方式转换，任何人都可以轻松解码。如果需要数据安全，应该先加密数据再进行Base64编码，或使用专门的加密工具。"
        }
      ],
      "encoded": "编码完成",
      "decoded": "解码完成",
      "meta": {
        "title": "Base64编码解码工具 - 在线文本转换",
        "description": "在线Base64编码解码工具,支持文本快速编码解码,适用于数据传输、API开发,一键复制。",
        "keywords": "Base64编码, Base64解码, 文本转换"
      }
    },
    "url-encoder-decoder": {
      "name": "URL 编码解码",
      "description": "URL 字符串编码和解码工具",
      "placeholder": "请输入要编码/解码的URL或文本...",
      "encode": "编码",
      "decode": "解码",
      "input_title": "输入文本/URL",
      "output_title": "输出结果",
      "output_desc": "编码/解码后的URL",
      "output_placeholder": "编码/解码结果将显示在这里...",
      "invalid_url": "无效的URL编码格式",
      "introduction": "URL编码解码器是专业的网址处理工具，支持URL字符串的编码和解码操作。遵循RFC 3986标准，可以正确处理中文、特殊字符和空格在URL中的转换。广泛应用于Web开发、API调用、搜索引擎优化等场景，确保URL的正确传输和解析。",
      "features": [
        "🌐 标准URL编码解码，符合RFC 3986规范",
        "🇨🇳 完美支持中文和特殊字符处理",
        "⚡ 实时转换，即时显示编码结果",
        "📋 一键复制处理后的URL",
        "🔍 自动识别并验证URL格式",
        "🎯 支持完整URL和URL参数编码",
        "🔒 本地处理，确保URL隐私安全",
        "📱 移动端优化，随时随地使用"
      ],
      "faq": [
        {
          "question": "什么是URL编码？为什么需要它？",
          "answer": "URL编码（百分号编码）是将特殊字符转换为%加十六进制的形式。因为URL只能包含ASCII字符，中文、空格、&等特殊字符需要编码才能在URL中正确传输。例如空格编码为%20，汉字'你好'编码为%E4%BD%A0%E5%A5%BD。"
        },
        {
          "question": "哪些字符需要进行URL编码？",
          "answer": "需要编码的字符包括：1）非ASCII字符（如中文）；2）URL保留字符（如&、=、?、#）；3）不安全字符（如空格、引号）；4）控制字符。安全的字符如字母、数字、-、_、.、~无需编码。"
        },
        {
          "question": "URL编码和HTML编码有什么区别？",
          "answer": "URL编码使用百分号(%)加十六进制表示，主要用于URL参数；HTML编码使用&实体;形式，用于HTML文档。例如空格在URL中是%20，在HTML中是&nbsp;。两者用途和编码规则完全不同。"
        },
        {
          "question": "如何处理URL中的中文参数？",
          "answer": "中文参数必须进行URL编码才能正确传输。我们的工具采用UTF-8编码，将中文转换为字节序列再进行百分号编码。这确保了中文参数在各种浏览器和服务器环境中的兼容性。"
        },
        {
          "question": "URL解码失败怎么办？",
          "answer": "解码失败通常是因为：1）URL编码格式不正确；2）包含无效的十六进制字符；3）编码不完整。检查URL是否有效，确保%后面跟着两位有效的十六进制数字，必要时可以尝试部分解码。"
        }
      ],
      "encoded": "编码完成",
      "decoded": "解码完成",
      "meta": {
        "title": "URL编码解码工具 - encodeURIComponent",
        "description": "在线URL编码解码工具,支持encodeURIComponent格式,处理URL参数和特殊字符转义,前端开发必备。",
        "keywords": "URL编码, URL解码, encodeURIComponent"
      }
    },
    "uuid-generator": {
      "name": "UUID生成器",
      "description": "批量生成UUID唯一标识符",
      "settings_title": "生成设置",
      "settings_desc": "配置UUID生成参数",
      "count_label": "生成数量",
      "count_hint": "可生成1-1000个UUID",
      "format_label": "输出格式",
      "format_default": "标准格式 (小写带横杠)",
      "format_uppercase": "大写格式",
      "format_no_dash": "无横杠格式",
      "format_no_dash_uppercase": "大写无横杠格式",
      "generate": "生成UUID",
      "result_title": "生成结果",
      "result_desc": "批量生成的UUID列表",
      "result_placeholder": "生成的UUID将显示在这里...",
      "generated_count": "已生成 {count} 个UUID",
      "about_title": "关于UUID",
      "about_uuid_title": "什么是UUID",
      "about_uuid_desc": "UUID（通用唯一识别码）是一种128位的唯一标识符，可以保证在时间和空间上的唯一性",
      "about_v4_title": "UUID v4版本",
      "about_v4_desc": "本工具使用UUID v4版本，完全基于随机数生成，碰撞概率极低",
      "about_format_title": "格式说明",
      "about_format_desc": "标准格式为8-4-4-4-12的十六进制字符，也可选择大写或无横杠格式",
      "about_use_title": "使用场景",
      "about_use_desc": "适用于数据库主键、分布式系统ID、文件命名、API令牌等场景",
      "introduction": "UUID生成器是专业的唯一标识符批量生成工具，基于UUID v4标准，采用加密安全的随机数生成算法。UUID（Universally Unique Identifier）在分布式系统中广泛应用，无需中心化协调即可保证全球范围内的唯一性。支持多种输出格式，包括标准格式、大写格式、无横杠格式等，满足不同场景需求。本工具可一次生成多达1000个UUID，大幅提升开发效率。",
      "features": [
        "🎲 基于UUID v4标准，完全随机生成",
        "🔐 使用加密安全的随机数生成器",
        "📊 批量生成1-1000个UUID",
        "🎨 支持多种输出格式：标准、大写、无横杠",
        "📋 一键复制所有UUID到剪贴板",
        "💾 支持导出为文本文件",
        "⚡ 高性能生成，毫秒级完成",
        "🔒 本地生成，确保安全性"
      ],
      "faq": [
        {
          "question": "什么是UUID？为什么要使用它？",
          "answer": "UUID（通用唯一识别码）是一种128位的标识符，在时间和空间上具有唯一性。使用UUID的主要优势：1）无需中央协调就能保证唯一性；2）适合分布式系统；3）碰撞概率极低（约1/2^122）；4）可以离线生成；5）不泄露创建时间和位置信息。"
        },
        {
          "question": "UUID v4是什么？与其他版本有什么区别？",
          "answer": "UUID有多个版本，v4是完全基于随机数生成的版本。区别在于：v1基于时间戳和MAC地址（可能泄露隐私），v3/v5基于命名空间和名称的哈希，v4纯随机生成（最常用）。v4的优势是简单、安全、不依赖硬件信息，适合大多数应用场景。"
        },
        {
          "question": "UUID的碰撞概率有多低？",
          "answer": "UUID v4有2^122个可能的值（约5.3×10^36）。理论上，生成10亿个UUID，碰撞概率约为1/2^92，远低于宇宙射线导致计算机错误的概率。实际应用中，UUID碰撞被认为是不可能事件，可以安全使用。"
        },
        {
          "question": "UUID适用于哪些场景？",
          "answer": "UUID广泛应用于：1）数据库主键，特别是分布式数据库；2）分布式系统的唯一标识；3）文件和资源命名；4）API令牌和会话ID；5）消息队列的消息ID；6）微服务架构中的请求追踪；7）缓存键生成。任何需要全局唯一标识的场景都适合使用UUID。"
        },
        {
          "question": "不同格式的UUID有什么区别？应该如何选择？",
          "answer": "标准格式（8-4-4-4-12带横杠）是最常见的，适合数据库存储和API传输；大写格式在某些系统中作为常量使用；无横杠格式更紧凑，适合URL和文件名；大写无横杠适合生成短码。选择取决于具体需求：存储优先选无横杠（节省空间），可读性优先选标准格式。"
        }
      ],
      "meta": {
        "title": "UUID生成器 - 批量生成唯一标识符",
        "description": "在线UUID批量生成工具,支持UUID v4标准,多种输出格式,快速生成全球唯一标识符。",
        "keywords": "UUID生成器, 唯一标识符, GUID"
      }
    },
    "password-generator": {
      "name": "密码生成器",
      "description": "生成安全可靠的随机密码",
      "settings_title": "密码设置",
      "settings_desc": "自定义密码生成规则",
      "length": "密码长度",
      "uppercase": "包含大写字母",
      "lowercase": "包含小写字母",
      "numbers": "包含数字",
      "symbols": "包含符号",
      "exclude_similar": "排除相似字符 (il1Lo0O)",
      "exclude_ambiguous": "排除歧义字符 (方括号、圆括号等)",
      "generate": "生成密码",
      "result_title": "生成结果",
      "result_desc": "生成的密码和强度评估",
      "result_placeholder": "生成的密码将显示在这里...",
      "strength": "密码强度",
      "weak": "弱",
      "medium": "中等",
      "strong": "强",
      "no_charset": "请至少选择一种字符类型",
      "tips_title": "使用建议",
      "tip1_title": "密码长度",
      "tip1_desc": "建议使用12位以上的密码，长度越长安全性越高",
      "tip2_title": "字符组合",
      "tip2_desc": "建议包含大写字母、小写字母、数字和符号",
      "tip3_title": "定期更换",
      "tip3_desc": "定期更换密码，避免在多个账户使用相同密码",
      "tip4_title": "安全存储",
      "tip4_desc": "使用密码管理器安全存储密码，避免明文记录",
      "introduction": "密码生成器是专业的安全密码创建工具，采用密码学安全的随机数生成算法，可以创建高强度、难以破解的随机密码。支持自定义密码长度、字符集组合、排除相似字符等高级选项，并提供实时的密码强度评估。本工具完全在本地运行，确保生成的密码不会被传输或存储，最大程度保护用户隐私安全。",
      "features": [
        "🔐 密码学安全的随机数生成算法",
        "⚙️ 灵活的密码配置选项，支持4-128位长度",
        "🎯 智能字符集组合，大小写字母、数字、符号全覆盖",
        "🔍 排除相似字符功能，避免视觉混淆",
        "📊 实时密码强度评估，三级安全等级显示",
        "📋 一键复制生成的密码到剪贴板",
        "🔒 完全本地生成，确保密码隐私安全",
        "📱 响应式设计，移动设备完美支持"
      ],
      "faq": [
        {
          "question": "生成的密码有多安全？为什么要用随机密码？",
          "answer": "本工具使用浏览器内置的密码学安全随机数生成器，确保生成的密码具有高度随机性。随机密码相比常见密码或规律密码具有指数级的安全优势，12位包含多种字符的随机密码破解时间可达数万年。"
        },
        {
          "question": "密码长度应该设置多少位比较好？",
          "answer": "建议至少12位，更推荐16位以上。密码安全性随长度指数增长：8位密码几小时可破解，12位需要数年，16位需要数万年。但也要考虑实际使用场景，某些老旧系统可能有长度限制。"
        },
        {
          "question": "为什么要排除相似字符？什么情况下使用？",
          "answer": "相似字符如'i'和'1'、'O'和'0'在某些字体下难以区分，可能导致密码输入错误。当密码需要手动输入或打印时建议启用此选项。但这会略微降低密码强度，在线存储的密码可以不启用。"
        },
        {
          "question": "如何安全地管理生成的密码？",
          "answer": "1) 使用专业密码管理器（如1Password、LastPass）统一存储；2) 启用二次身份验证；3) 不同账户使用不同密码；4) 定期更换重要账户密码；5) 避免在浏览器或明文文件中保存密码。"
        },
        {
          "question": "密码强度评估是如何计算的？",
          "answer": "系统综合考虑密码长度、字符类型多样性等因素计算强度分数。弱密码（<40分）易被破解，中等密码（40-70分）有一定安全性，强密码（>70分）具有很高安全性。建议使用强密码保护重要账户。"
        }
      ],
      "meta": {
        "title": "密码生成器 - 生成高强度随机密码",
        "description": "在线安全密码生成器,支持自定义长度、字符集,生成高强度随机密码,保护账户安全。",
        "keywords": "密码生成器, 随机密码, 安全密码"
      }
    },
    "aes-encrypt-decrypt": {
      "name": "AES加密解密器",
      "description": "AES对称加密算法加密解密工具",
      "input_title": "输入数据",
      "input_desc": "输入要加密/解密的数据",
      "input_placeholder": "请输入要加密或解密的文本...",
      "key_label": "密钥 (32字符)",
      "key_placeholder": "请输入32位密钥或点击生成...",
      "generate_key": "生成密钥",
      "iv_label": "初始化向量 (16字符)",
      "iv_placeholder": "请输入16位IV或点击生成...",
      "generate_iv": "生成IV",
      "mode_label": "加密模式",
      "select_mode": "选择加密模式",
      "padding_label": "填充模式",
      "select_padding": "选择填充模式",
      "encrypt": "加密",
      "decrypt": "解密",
      "output_title": "输出结果",
      "output_desc": "加密/解密后的数据",
      "output_placeholder": "加密/解密结果将显示在这里...",
      "missing_input_key": "请输入数据和密钥",
      "missing_input_key_iv": "请输入数据、密钥和IV",
      "decrypt_failed": "解密失败，请检查数据和密钥",
      "tips_title": "使用说明",
      "tip1_title": "AES算法",
      "tip1_desc": "AES（高级加密标准）是目前最安全的对称加密算法之一",
      "tip2_title": "密钥安全",
      "tip2_desc": "密钥长度为32字符（256位），请妥善保管密钥",
      "tip3_title": "初始化向量",
      "tip3_desc": "IV增加加密的随机性，每次加密应使用不同的IV",
      "tip4_title": "数据安全",
      "tip4_desc": "所有加密解密在本地完成，数据不会上传到服务器",
      "introduction": "AES加密解密工具是基于高级加密标准(Advanced Encryption Standard)的专业数据安全处理工具。AES是美国国家标准与技术研究院(NIST)发布的对称加密算法标准，被广泛应用于政府、金融、企业等关键信息系统的数据保护。本工具支持AES-256-CBC模式，采用256位密钥长度，提供工业级别的数据安全保障，所有加密解密操作均在浏览器本地完成，确保数据隐私安全。",
      "features": [
        "🔐 AES-256-CBC工业级对称加密算法，256位密钥长度",
        "🛡️ 符合NIST标准，政府和企业级安全保障",
        "🔑 自动生成密钥和初始化向量(IV)，确保加密安全性",
        "⚡ 实时加密解密处理，支持大文本数据加密",
        "📋 一键复制加密结果，支持密文和密钥的便捷管理",
        "🎯 智能错误检测，自动验证密钥格式和数据完整性",
        "🔒 本地处理保护隐私，加密过程不涉及网络传输",
        "📱 响应式设计，支持移动端和桌面端操作"
      ],
      "faq": [
        {
          "question": "AES加密算法的安全性如何？适用于什么场景？",
          "answer": "AES是目前最安全的对称加密算法之一，被美国政府采用作为机密信息的加密标准。AES-256使用256位密钥，在理论上需要2^256次尝试才能破解，即使使用超级计算机也需要数十亿年。适用于敏感文档保护、数据库加密、通信加密、文件存储安全等场景。"
        },
        {
          "question": "为什么需要初始化向量(IV)？它的作用是什么？",
          "answer": "初始化向量(IV)是AES-CBC模式的重要安全机制，它确保即使对相同的明文使用相同的密钥，每次加密的结果也不同，防止密码分析攻击。IV不需要保密，但每次加密应该使用随机生成的IV。我们的工具会自动生成安全的随机IV。"
        },
        {
          "question": "AES密钥应该如何生成和管理？",
          "answer": "AES-256密钥应该是32字节(256位)的随机数据。我们的工具提供安全的随机密钥生成功能，使用浏览器的加密安全随机数生成器。在实际应用中，密钥应该安全保管，定期更换，使用专业的密钥管理系统，绝不能明文存储或通过不安全的方式传输。"
        },
        {
          "question": "AES对称加密和RSA非对称加密有什么区别？",
          "answer": "AES是对称加密，加密和解密使用相同的密钥，加密速度快，适合大量数据加密，但密钥分发是挑战。RSA是非对称加密，使用公私钥对，公钥加密私钥解密，密钥分发安全但加密速度慢。实际应用中常结合使用：RSA传递AES密钥，AES加密实际数据。"
        },
        {
          "question": "如果忘记了AES密钥，还能解密数据吗？",
          "answer": "不能。AES加密的安全性正是基于密钥的保密性，没有正确的密钥就无法解密数据。这是AES设计的安全特性，即使是算法的设计者也无法在不知道密钥的情况下解密数据。因此，密钥的安全保管和备份至关重要，建议使用专业的密钥管理方案。"
        }
      ],
      "meta": {
        "title": "AES加密解密工具 - AES-256-CBC在线加密",
        "description": "在线AES加密解密工具,支持AES-256-CBC模式,提供安全的对称加密算法保护数据。",
        "keywords": "AES加密, AES解密, 数据加密"
      }
    },
    "rsa-encrypt-decrypt": {
      "name": "RSA加密解密器",
      "description": "RSA非对称加密算法工具",
      "encrypt_tab": "加密解密",
      "keygen_tab": "密钥生成",
      "input_title": "输入数据",
      "input_desc": "输入要加密/解密的数据",
      "input_placeholder": "请输入要加密或解密的文本...",
      "public_key": "公钥",
      "public_key_label": "公钥 (用于加密)",
      "public_key_placeholder": "请输入或生成RSA公钥...",
      "private_key": "私钥",
      "private_key_label": "私钥 (用于解密)",
      "private_key_placeholder": "请输入或生成RSA私钥...",
      "encrypt": "RSA加密",
      "decrypt": "RSA解密",
      "output_title": "输出结果",
      "output_desc": "加密/解密后的数据",
      "output_placeholder": "加密/解密结果将显示在这里...",
      "keygen_title": "密钥对生成",
      "keygen_desc": "生成RSA公私钥对",
      "generate_keys": "生成密钥对",
      "key_size_label": "密钥长度",
      "select_key_size": "选择密钥长度",
      "generate_keypair": "生成密钥对",
      "generating": "生成中...",
      "generated_public_key": "生成的公钥",
      "generated_private_key": "生成的私钥",
      "missing_input_key": "请输入数据和公钥",
      "missing_input_public_key": "请输入数据和公钥",
      "missing_input_private_key": "请输入数据和私钥",
      "encrypt_failed": "加密失败，请检查数据和公钥",
      "decrypt_failed": "解密失败，请检查数据和私钥",
      "placeholder": "请输入要加密或解密的文本...",
      "tips_title": "使用说明",
      "tip1_title": "RSA算法",
      "tip1_desc": "RSA是安全的非对称加密算法，公钥加密，私钥解密",
      "tip2_title": "密钥长度",
      "tip2_desc": "推荐使用2048位以上的密钥长度，更高安全性",
      "tip3_title": "数据限制",
      "tip3_desc": "RSA加密有数据长度限制，大数据建议使用AES+RSA组合",
      "tip4_title": "密钥管理",
      "tip4_desc": "私钥需要严格保密，公钥可以公开分享",
      "introduction": "RSA加密解密器是专业的非对称加密工具，基于RSA算法提供安全的数据加密解密服务。支持密钥对生成、公钥加密、私钥解密，广泛应用于数据传输安全、数字签名、身份验证等场景。RSA作为经典的公钥密码系统，采用数学难题保障安全性，是现代信息安全的重要基础。本工具提供完整的RSA加密解密功能，帮助用户实现安全的数据保护。",
      "features": [
        "🔐 标准RSA算法实现，支持多种密钥长度",
        "🔑 一键生成RSA密钥对，自动配置公私钥",
        "🔒 公钥加密功能，保护敏感数据传输",
        "🔓 私钥解密功能，安全恢复原始数据",
        "⚡ 实时加密解密，无需等待处理",
        "📋 便捷的复制和下载功能",
        "🔧 支持自定义密钥导入和管理",
        "🛡️ 客户端处理，保护数据隐私安全",
        "📱 响应式设计，移动端完美适配",
        "🎯 专业级加密强度，满足安全需求"
      ],
      "faq": [
        {
          "question": "RSA加密算法是什么？它有什么优势？",
          "answer": "RSA是一种非对称加密算法，使用公钥加密、私钥解密。优势包括：1）无需预先共享密钥；2）支持数字签名验证身份；3）密钥管理相对简单；4）广泛应用于HTTPS、SSH等协议；5）数学基础坚实，安全性经过长期验证。"
        },
        {
          "question": "RSA密钥长度应该选择多少位？",
          "answer": "推荐使用2048位或更高长度：1）1024位已不够安全，不建议使用；2）2048位是当前最低推荐标准；3）3072位提供更高安全性；4）4096位适用于高安全要求场景。密钥越长安全性越高，但计算耗时也会增加。"
        },
        {
          "question": "RSA可以加密多长的数据？",
          "answer": "RSA有数据长度限制：对于n位密钥，最大可加密(n/8-11)字节数据。例如2048位密钥最多加密245字节。对于大量数据，通常采用RSA+AES混合加密：用AES加密数据，用RSA加密AES密钥。"
        },
        {
          "question": "公钥和私钥有什么区别？如何使用？",
          "answer": "公钥用于加密，可以公开分享；私钥用于解密，必须严格保密。使用流程：1）生成密钥对；2）公开分享公钥；3）他人用公钥加密数据发送给你；4）你用私钥解密获得原始数据。私钥丢失将无法解密数据。"
        },
        {
          "question": "RSA加密的数据安全吗？会被破解吗？",
          "answer": "使用足够长度的RSA密钥是安全的。2048位RSA密钥在当前技术条件下需要数万年才能破解。但要注意：1）选择可信的密钥长度；2）妥善保管私钥；3）定期更换密钥；4）防止侧信道攻击。量子计算可能威胁RSA安全，但商用量子计算机尚未普及。"
        }
      ],
      "meta": {
        "title": "RSA加密解密工具 - 密钥生成与加密",
        "description": "在线RSA加密解密工具,支持密钥对生成、公钥加密私钥解密,保障数据传输安全。",
        "keywords": "RSA加密, RSA密钥生成, 非对称加密"
      }
    },
    "md5-hash": {
      "name": "MD5哈希生成器",
      "description": "生成MD5哈希值的工具",
      "placeholder": "请输入要计算MD5的文本...",
      "generate": "生成MD5",
      "input_title": "输入文本",
      "introduction": "MD5哈希生成器是专业的数据摘要工具，能够将任意长度的文本转换为固定长度的32位十六进制字符串。广泛应用于数据完整性验证、密码存储、文件校验等场景。虽然MD5不适合高安全性应用，但在数据标识、缓存键生成等方面仍有重要价值。",
      "features": [
        "🔐 标准MD5算法实现，结果准确可靠",
        "⚡ 实时计算，输入即时生成哈希值",
        "📝 支持任意长度文本和特殊字符",
        "📋 一键复制32位十六进制结果",
        "🎯 固定长度输出，便于数据标识",
        "🔍 支持数据完整性快速验证",
        "🔒 本地计算，保护数据隐私",
        "📱 跨平台兼容，移动端友好"
      ],
      "faq": [
        {
          "question": "MD5哈希有什么用途？",
          "answer": "MD5主要用于：1）数据完整性验证（检查文件是否被修改）；2）数据去重（相同内容产生相同哈希）；3）缓存键生成；4）数据标识符创建；5）简单的数据校验。注意MD5不应用于密码加密等安全场景。"
        },
        {
          "question": "MD5安全吗？可以用于密码加密吗？",
          "answer": "MD5不再被认为是安全的哈希算法，存在碰撞攻击风险。不建议用于密码存储、数字签名等安全场景。对于密码加密，推荐使用bcrypt、scrypt或Argon2等专门的密码哈希算法。"
        },
        {
          "question": "为什么相同的输入总是产生相同的MD5值？",
          "answer": "这是MD5算法的确定性特征。相同的输入数据经过MD5运算必然产生相同的哈希值，这个特性使MD5适用于数据完整性验证和去重场景。任何微小的输入变化都会导致哈希值完全不同。"
        },
        {
          "question": "MD5哈希值的长度是多少？",
          "answer": "MD5始终产生128位（16字节）的哈希值，通常表示为32个十六进制字符。无论输入数据长度如何，MD5输出长度都是固定的，这是哈希函数的重要特性之一。"
        },
        {
          "question": "如何验证文件的MD5值？",
          "answer": "将文件内容复制到工具中生成MD5值，然后与提供的官方MD5值对比。如果完全一致，说明文件完整未被修改；如果不同，则文件可能已损坏或被篡改。这是验证下载文件完整性的常用方法。"
        }
      ],
      "output_title": "MD5哈希值",
      "output_desc": "生成的MD5哈希值",
      "output_placeholder": "MD5哈希值将显示在这里...",
      "meta": {
        "title": "MD5哈希生成器 - 在线MD5加密工具",
        "description": "在线MD5哈希生成工具,快速计算文本的MD5值,适用于数据校验、完整性验证和唯一标识。",
        "keywords": "MD5哈希, MD5生成器, 数据校验"
      }
    },
    "sha256-hash": {
      "name": "SHA256哈希生成器",
      "description": "生成SHA256哈希值的工具",
      "placeholder": "请输入要计算SHA256的文本...",
      "generate": "生成SHA256",
      "input_title": "输入文本",
      "output_title": "SHA256哈希值",
      "output_desc": "生成的SHA256哈希值",
      "output_placeholder": "SHA256哈希值将显示在这里...",
      "introduction": "SHA256哈希生成器是SHA-2系列中最重要的安全散列算法，产生256位（64个十六进制字符）的固定长度摘要。SHA256被广泛认为是当前最安全的哈希算法之一，在区块链、数字证书、密码存储、数据完整性验证等关键安全应用中发挥核心作用。相比SHA1和MD5，SHA256提供了更强的安全保障。",
      "features": [
        "🔐 SHA-2系列顶级安全算法，256位强度保障",
        "⚡ 高效计算，快速生成64位十六进制摘要",
        "📝 支持任意长度数据，从文本到大文件",
        "📋 一键复制完整256位哈希值",
        "🛡️ 抗碰撞能力极强，安全性远超SHA1/MD5",
        "🎯 固定64字符输出，便于存储和比较",
        "🔒 本地处理保护隐私，无需上传数据",
        "📱 全平台兼容，移动端流畅体验"
      ],
      "faq": [
        {
          "question": "SHA256相比SHA1和MD5有什么优势？",
          "answer": "SHA256输出256位（64个十六进制字符），安全强度远超SHA1（160位）和MD5（128位）。SHA256具有更强的抗碰撞能力，目前没有已知的实际攻击方法，被认为是安全的哈希算法，广泛用于比特币等区块链系统。"
        },
        {
          "question": "SHA256在区块链中的作用是什么？",
          "answer": "SHA256是比特币等主流区块链的核心算法，用于工作量证明（PoW）挖矿、区块哈希计算、交易ID生成等。其强安全性确保了区块链数据的不可篡改性，是整个加密货币生态系统的安全基石。"
        },
        {
          "question": "SHA256适用于密码存储吗？",
          "answer": "SHA256本身不适合直接存储密码，因为计算速度快容易被暴力破解。密码存储应使用专门的慢哈希算法如bcrypt、scrypt或Argon2。但SHA256常用于生成盐值、API密钥验证等场景。"
        },
        {
          "question": "如何验证文件的SHA256完整性？",
          "answer": "将文件内容输入工具生成SHA256值，与官方提供的校验和对比。完全匹配说明文件完整未被修改，任何字符差异都表示文件可能损坏或被篡改。这是最可靠的文件完整性验证方法。"
        },
        {
          "question": "SHA256哈希值有什么特征？",
          "answer": "SHA256输出固定64个十六进制字符（0-9和a-f），如：e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855。输入的微小变化都会导致输出完全不同，且无法从哈希值反推出原始数据。"
        }
      ],
      "meta": {
        "title": "SHA256哈希生成器 - 安全加密工具",
        "description": "在线SHA256哈希生成工具,生成安全的SHA-256哈希值,广泛用于密码存储和数据完整性验证。",
        "keywords": "SHA256哈希, SHA256生成器, 密码加密"
      }
    },
    "sha1-hash": {
      "name": "SHA1哈希生成器",
      "description": "生成SHA1哈希值的工具",
      "placeholder": "请输入要计算SHA1的文本...",
      "generate": "生成SHA1",
      "input_title": "输入文本",
      "introduction": "SHA1哈希生成器是安全散列算法工具，能够将任意长度的数据转换为160位（40个十六进制字符）的固定长度摘要。SHA1比MD5更安全，广泛应用于数字签名、版本控制系统、数据完整性验证等场景。虽然SHA1已不推荐用于高安全性应用，但在许多传统系统中仍有重要作用。",
      "features": [
        "🔐 标准SHA1算法实现，160位安全哈希",
        "⚡ 实时计算，快速生成40位十六进制摘要",
        "📝 支持任意长度文本和二进制数据",
        "📋 一键复制完整SHA1哈希值",
        "🔍 比MD5更强的抗碰撞能力",
        "🎯 固定40字符输出，便于比较验证",
        "🔒 本地处理，确保数据隐私安全",
        "📱 跨设备兼容，移动端完美支持"
      ],
      "faq": [
        {
          "question": "SHA1和MD5有什么区别？",
          "answer": "SHA1输出160位（40个十六进制字符），而MD5输出128位（32个字符）。SHA1具有更强的安全性和抗碰撞能力，在Git版本控制、数字证书等应用中被广泛使用。SHA1的计算复杂度也略高于MD5。"
        },
        {
          "question": "SHA1还安全吗？现在还能用吗？",
          "answer": "SHA1已被证实存在碰撞攻击的理论可能性，不建议用于新的安全关键应用。但对于文件完整性检查、非关键数据标识等场景仍可使用。新项目建议使用SHA-256或更强的算法。"
        },
        {
          "question": "为什么Git使用SHA1？",
          "answer": "Git使用SHA1作为对象标识符，因为SHA1在设计时提供了良好的分布性和低碰撞概率。虽然现在有更安全的算法，但Git的设计使得意外碰撞几乎不可能影响实际使用，且更换算法需要巨大的兼容性代价。"
        },
        {
          "question": "如何使用SHA1验证文件完整性？",
          "answer": "将文件内容输入工具生成SHA1值，与官方提供的SHA1摘要对比。完全匹配说明文件完整，任何差异都表示文件可能被修改或损坏。这比MD5提供了更可靠的完整性保证。"
        },
        {
          "question": "SHA1哈希值的格式是什么？",
          "answer": "SHA1输出为160位二进制数据，通常表示为40个十六进制字符（0-9和a-f）。例如：da39a3ee5e6b4b0d3255bfef95601890afd80709。无论输入多长，SHA1输出始终是40个字符。"
        }
      ],
      "output_title": "SHA1哈希值",
      "output_desc": "生成的SHA1哈希值",
      "output_placeholder": "SHA1哈希值将显示在这里...",
      "meta": {
        "title": "SHA1哈希生成器 - Git版本控制工具",
        "description": "在线SHA1哈希生成工具,计算文本的SHA-1哈希值,用于数据校验、Git版本控制和完整性验证。",
        "keywords": "SHA1哈希, SHA1生成器, Git哈希"
      }
    },
    "hex-encoder-decoder": {
      "name": "Hex编码解码器",
      "description": "十六进制字符串编码解码工具",
      "placeholder": "请输入要编码/解码的文本或十六进制...",
      "encode": "编码为Hex",
      "decode": "从Hex解码",
      "input_title": "输入文本",
      "output_title": "输出结果",
      "output_desc": "编码/解码后的结果",
      "output_placeholder": "编码/解码结果将显示在这里...",
      "invalid_hex": "无效的十六进制格式",
      "encoded": "编码完成",
      "decoded": "解码完成",
      "introduction": "Hex编码解码器是专业的十六进制数据转换工具，实现文本与十六进制字符串之间的双向转换。十六进制编码广泛应用于程序开发、数据传输、调试分析、密码学等领域，是计算机科学中最基础且重要的数据表示方法之一。本工具支持标准的UTF-8编码，确保中文等多字节字符的正确处理。",
      "features": [
        "🔄 双向转换支持，文本转Hex和Hex转文本",
        "⚡ 实时编码解码，输入即时显示结果",
        "📝 完整UTF-8字符集支持，包含中文等多字节字符",
        "📋 一键复制编码解码结果",
        "🎯 智能格式验证，自动检测无效十六进制",
        "🔍 空格自动处理，忽略格式间隔符",
        "🔒 本地处理保护隐私，无需上传数据",
        "📱 响应式设计，移动端完美适配"
      ],
      "faq": [
        {
          "question": "什么是十六进制编码？为什么要使用它？",
          "answer": "十六进制编码是将字节数据表示为0-9和A-F字符的方法，每个字节用两个十六进制字符表示。它比二进制更紧凑，比十进制更直观地表示计算机内部数据，广泛用于内存地址、颜色代码、加密密钥等场景。"
        },
        {
          "question": "为什么我的中文字符编码后这么长？",
          "answer": "中文等多字节字符在UTF-8编码中通常占用3个字节，每个字节转换为2个十六进制字符，所以一个中文字符会产生6个十六进制字符。这是正常的编码行为，确保了字符的完整性和国际化支持。"
        },
        {
          "question": "十六进制编码和Base64编码有什么区别？",
          "answer": "十六进制使用16个字符（0-9,A-F），每个字符表示4位数据，编码后长度是原始数据的2倍。Base64使用64个字符，每个字符表示6位数据，编码后约为原始数据的1.33倍，更紧凑但可读性稍差。"
        },
        {
          "question": "如何在编程中处理十六进制数据？",
          "answer": "大多数编程语言都内置十六进制支持。JavaScript中可用parseInt(hex, 16)解析，toString(16)转换。Python用hex()和int(hex_str, 16)。十六进制常用于位操作、内存调试、协议解析等底层编程场景。"
        },
        {
          "question": "为什么十六进制字符串必须是偶数长度？",
          "answer": "因为每个字节固定用两个十六进制字符表示，奇数长度的字符串无法正确对应到完整的字节边界。如果遇到奇数长度，通常需要在前面补0，或者检查数据是否完整。"
        }
      ],
      "meta": {
        "title": "Hex编码解码器 - 十六进制转换工具",
        "description": "在线十六进制编码解码工具,支持文本与Hex字符串互转,适用于数据处理、调试和开发。",
        "keywords": "Hex编码, 十六进制转换, Hex解码"
      }
    },
    "binary-encoder-decoder": {
      "name": "Binary编码解码器",
      "description": "二进制字符串编码解码工具",
      "placeholder": "请输入要编码/解码的文本或二进制...",
      "encode": "编码为Binary",
      "decode": "从Binary解码",
      "input_title": "输入文本",
      "output_title": "输出结果",
      "output_desc": "编码/解码后的结果",
      "output_placeholder": "编码/解码结果将显示在这里...",
      "invalid_binary": "无效的二进制格式",
      "encoded": "编码完成",
      "decoded": "解码完成",
      "introduction": "Binary编码解码器是专业的二进制数据处理工具，实现文本与二进制字符串之间的精确转换。二进制作为计算机的底层语言，是理解计算机工作原理和数据存储机制的基础。本工具采用标准的UTF-8编码方式，确保中文等多字节字符的准确处理，广泛应用于计算机科学教学、底层编程调试、数据分析等专业领域。",
      "features": [
        "🔢 标准二进制编码转换，每个字符转换为8位二进制",
        "⚡ 实时转换处理，输入即时显示转换结果",
        "📝 完整UTF-8字符集支持，包含中文等多字节字符",
        "📋 一键复制编码解码结果到剪贴板",
        "🎯 智能格式验证，自动检测无效二进制序列",
        "🔍 空格自动处理，支持格式化的二进制显示",
        "🔒 本地处理保护隐私，所有转换在浏览器本地完成",
        "📱 响应式设计，支持移动端和桌面端设备"
      ],
      "faq": [
        {
          "question": "什么是二进制编码？它有什么用途？",
          "answer": "二进制编码是将字符转换为由0和1组成的二进制数字序列。每个字符按照其UTF-8编码的字节值转换为8位二进制数。二进制编码主要用于计算机科学教学、理解数据存储原理、底层编程调试、以及数字电路设计等领域。"
        },
        {
          "question": "为什么一个中文字符会产生这么多二进制位？",
          "answer": "中文字符在UTF-8编码中通常占用3个字节，每个字节包含8位二进制数，所以一个中文字符会产生24位二进制数（3×8=24）。这确保了中文字符的完整表示和国际化兼容性，是Unicode标准的正常编码方式。"
        },
        {
          "question": "二进制编码和ASCII编码有什么区别？",
          "answer": "ASCII编码只能表示128个基本英文字符，每个字符用7位表示。而我们的二进制编码基于UTF-8，可以表示全世界所有字符，包括中文、emoji等。UTF-8向下兼容ASCII，但提供了更广泛的字符支持。"
        },
        {
          "question": "如何理解二进制数据在计算机中的存储？",
          "answer": "计算机内部所有数据都以二进制形式存储。每8个二进制位（0或1）组成一个字节，这是计算机存储的基本单位。理解二进制编码有助于理解计算机如何存储文本、图片、程序等各种数据。"
        },
        {
          "question": "二进制字符串必须是8的倍数吗？",
          "answer": "是的，因为UTF-8编码以字节为单位，每个字节固定包含8位。如果二进制字符串的长度不是8的倍数，通常表示数据不完整或存在错误。解码时我们会检查这个条件以确保数据完整性。"
        }
      ],
      "meta": {
        "title": "Binary编码解码器 - 二进制转换工具",
        "description": "在线二进制编码解码工具,支持文本与二进制互转,适用于数据分析、调试和编程学习。",
        "keywords": "Binary编码, 二进制转换, Binary解码"
      }
    },
    "qr-code-generator": {
      "name": "二维码生成器",
      "description": "生成自定义二维码图片",
      "placeholder": "请输入要生成二维码的内容...",
      "input_title": "输入内容",
      "input_desc": "输入文本、URL或其他内容",
      "output_title": "生成的二维码",
      "output_desc": "生成的二维码图片",
      "size_label": "尺寸大小",
      "select_size": "选择二维码尺寸",
      "error_correction_label": "纠错级别",
      "select_error_correction": "选择纠错级别",
      "foreground_color": "前景色",
      "background_color": "背景色",
      "format_label": "导出格式",
      "select_format": "选择导出格式",
      "generate_button": "生成二维码",
      "download_png": "下载PNG",
      "download_svg": "下载SVG",
      "copy_image": "复制图片",
      "qr_copied": "二维码已复制到剪贴板",
      "qr_downloaded": "二维码文件已下载",
      "empty_content": "请输入内容",
      "generate_failed": "生成二维码失败",
      "sizes": {
        "small": "小 (128x128)",
        "medium": "中 (256x256)",
        "large": "大 (512x512)",
        "xlarge": "特大 (1024x1024)"
      },
      "error_levels": {
        "L": "低 (7%)",
        "M": "中 (15%)",
        "Q": "较高 (25%)",
        "H": "高 (30%)"
      },
      "tips_title": "使用说明",
      "tip1_title": "内容类型",
      "tip1_desc": "支持文本、URL、电话、邮箱、WiFi配置等各种内容类型",
      "tip2_title": "尺寸选择",
      "tip2_desc": "根据使用场景选择合适的尺寸，打印用途建议选择大尺寸",
      "tip3_title": "纠错级别",
      "tip3_desc": "纠错级别越高，二维码越复杂，但容错能力越强",
      "tip4_title": "颜色设置",
      "tip4_desc": "保持前景色和背景色有足够对比度，确保扫描识别",
      "introduction": "二维码生成器是专业的QR码制作工具，支持将文本、URL、联系信息、WiFi配置等各类数据转换为高质量的二维码图片。二维码(QR Code)作为现代数字生活的重要载体，广泛应用于支付、营销、信息分享、产品追溯等场景。本工具提供丰富的自定义选项，包括尺寸调节、颜色配置、纠错级别设置，支持PNG和SVG双格式导出，确保生成的二维码具有最佳的扫描识别率和视觉效果。",
      "features": [
        "🎯 支持多种内容类型：文本、URL、电话、邮箱、WiFi配置",
        "📏 灵活尺寸选择：从128x128到1024x1024像素，满足不同应用需求",
        "🎨 自定义颜色配置：前景色和背景色自由调节，增强视觉效果",
        "🛡️ 智能纠错级别：4档纠错设置，平衡复杂度和容错能力",
        "📁 双格式导出：支持PNG位图和SVG矢量格式下载",
        "📋 一键复制功能：便捷的剪贴板操作，快速集成到设计流程",
        "🔒 本地生成保护隐私：所有操作在浏览器本地完成",
        "📱 响应式设计：完美适配移动端和桌面端操作"
      ],
      "faq": [
        {
          "question": "二维码支持哪些内容类型？如何针对不同类型优化？",
          "answer": "我们的二维码生成器支持纯文本、网址链接、电话号码、邮箱地址、WiFi配置信息、联系人信息(vCard)等多种内容类型。对于URL建议使用短链接以减少复杂度，WiFi配置可直接输入网络名和密码，联系信息支持标准vCard格式，确保各种设备都能正确识别。"
        },
        {
          "question": "如何选择合适的二维码尺寸和纠错级别？",
          "answer": "尺寸选择取决于使用场景：网页展示选择256x256，打印材料建议512x512或更大。纠错级别方面，L级(7%)适用于清洁环境，M级(15%)为通用推荐，Q级(25%)适用于可能有轻微损坏的环境，H级(30%)适用于恶劣环境或需要长期保存的场合。"
        },
        {
          "question": "二维码颜色设置有什么要求？如何确保扫描成功率？",
          "answer": "二维码的关键是前景色(码点)和背景色之间要有足够的对比度。建议使用深色前景配浅色背景(如黑配白)，避免使用红色系作为前景色(某些扫描器识别困难)，渐变色和过于接近的颜色也会影响识别率。我们的工具会自动检测对比度并给出建议。"
        },
        {
          "question": "PNG和SVG格式有什么区别？应该如何选择？",
          "answer": "PNG是位图格式，适合直接使用和分享，文件小，兼容性好，适用于网页、社交媒体、打印等场景。SVG是矢量格式，可无限缩放不失真，适合需要调整大小的设计项目、标识制作、专业印刷等。如果需要后期编辑或大幅缩放，建议选择SVG格式。"
        },
        {
          "question": "生成的二维码可以包含多少信息？有什么限制？",
          "answer": "二维码的信息容量取决于内容类型和纠错级别。纯数字可存储最多7089个字符，字母数字混合约4296个字符，中文等Unicode字符约1817个字符。实际应用中建议控制在较短长度以确保扫描速度和成功率。URL建议使用短链接服务，长文本可考虑分割成多个二维码。"
        }
      ],
      "meta": {
        "title": "二维码生成器 - 在线生成PNG/SVG二维码",
        "description": "在线二维码生成工具,支持自定义尺寸、颜色和纠错级别,生成高质量PNG/SVG格式二维码。",
        "keywords": "二维码生成器, QR码, 二维码制作"
      }
    },
    "svg-placeholder-generator": {
      "name": "SVG占位图生成器",
      "description": "生成自定义SVG占位图片",
      "width_label": "宽度",
      "height_label": "高度",
      "text_label": "占位文字",
      "text_placeholder": "输入占位文字...",
      "background_color": "背景色",
      "text_color": "文字颜色",
      "font_size_label": "字体大小",
      "template_label": "模板样式",
      "select_template": "选择模板样式",
      "generate_button": "生成占位图",
      "copy_svg": "复制SVG代码",
      "download_svg": "下载SVG文件",
      "svg_copied": "SVG代码已复制到剪贴板",
      "svg_downloaded": "SVG文件已下载",
      "preview_title": "预览效果",
      "svg_code_title": "SVG代码",
      "templates": {
        "simple": "简约风格",
        "gradient": "渐变背景",
        "grid": "网格背景",
        "dots": "点阵背景",
        "lines": "线条背景"
      },
      "default_text": "{width} × {height}",
      "tips_title": "使用说明",
      "tip1_title": "尺寸设置",
      "tip1_desc": "设置占位图的宽度和高度，支持像素单位",
      "tip2_title": "文字内容",
      "tip2_desc": "可以自定义占位文字，支持尺寸变量如宽度和高度的动态显示",
      "tip3_title": "模板选择",
      "tip3_desc": "提供多种模板样式，满足不同设计需求",
      "tip4_title": "导出使用",
      "tip4_desc": "生成的SVG可直接用于网页开发或设计稿中",
      "introduction": "SVG占位图生成器是专业的矢量占位图制作工具，支持快速生成各种尺寸和样式的SVG占位图片。SVG(可缩放矢量图形)作为矢量格式，具有无限缩放不失真、文件体积小、支持CSS样式调整等优势，是现代Web开发的理想选择。本工具提供多种预设模板，支持自定义尺寸、文字、颜色和背景样式，生成的SVG代码可直接嵌入HTML或用作设计稿占位符，大幅提升开发和设计效率。",
      "features": [
        "📏 灵活尺寸控制：支持50-2000像素范围内任意尺寸设置",
        "🎨 丰富模板样式：简约、渐变、网格、点阵、线条等多种背景模板",
        "✏️ 自定义文字内容：支持占位文字和动态尺寸变量显示",
        "🎯 精确颜色控制：前景色和背景色HSL色彩空间精确调节",
        "📝 字体大小调节：12-72像素字体大小滑动条控制",
        "📋 一键复制功能：SVG代码快速复制到剪贴板",
        "💾 文件下载支持：生成SVG文件直接下载保存",
        "📱 响应式预览：实时预览效果，支持移动端和桌面端"
      ],
      "faq": [
        {
          "question": "SVG占位图相比传统位图有什么优势？适用于哪些场景？",
          "answer": "SVG占位图具有矢量特性，可以无限缩放而不失真，文件体积更小，支持CSS样式控制。特别适用于响应式网页设计、高分辨率屏幕显示、打印材料、图标设计等场景。相比PNG/JPG位图，SVG在不同设备和分辨率下都能保持清晰的显示效果。"
        },
        {
          "question": "如何在项目中使用生成的SVG占位图？",
          "answer": "生成的SVG代码可以直接嵌入HTML中作为内联SVG，也可以保存为.svg文件通过<img>标签或CSS background-image引用。SVG支持CSS样式控制，可以通过CSS修改颜色、大小等属性。在设计工具中，SVG可作为占位符导入到Figma、Sketch等设计软件。"
        },
        {
          "question": "模板样式有什么区别？如何选择合适的模板？",
          "answer": "简约模板适合简洁风格的项目；渐变模板提供视觉层次感；网格模板适合展示尺寸规格；点阵模板具有现代科技感；线条模板适合几何风格设计。选择时考虑项目的设计风格、使用场景和视觉需求，所有模板都支持颜色自定义以匹配品牌色彩。"
        },
        {
          "question": "占位文字支持哪些内容？如何使用动态变量？",
          "answer": "占位文字支持任意UTF-8字符，包括中文、英文、数字、符号等。动态变量{width}和{height}会自动替换为实际的宽度和高度数值，便于生成标准化的尺寸标识。例如输入'{width}×{height}px'会显示为'400×300px'，适合开发阶段的尺寸标记。"
        },
        {
          "question": "生成的SVG文件大小如何？性能表现怎样？",
          "answer": "SVG占位图文件极小，通常只有几百字节到几KB，远小于同尺寸的位图文件。由于是矢量格式，浏览器渲染效率高，加载速度快。生成的SVG代码结构简洁，兼容所有现代浏览器，对网页性能几乎无影响，是理想的占位图解决方案。"
        }
      ],
      "meta": {
        "title": "SVG占位图生成器 - 自定义占位图片",
        "description": "在线SVG占位图片生成工具,支持自定义尺寸、文字、颜色和模板样式,快速生成占位图片。",
        "keywords": "SVG占位图, 占位图生成器, 图片占位符"
      }
    },
    "icon-designer": {
      "name": "图标设计器",
      "description": "使用文字、图标库或自定义SVG设计图标，自定义颜色并导出多种尺寸",
      "settings_title": "图标设置",
      "settings_desc": "自定义您的图标设计",
      "content_mode": "内容模式",
      "mode_text": "文字",
      "mode_icon_library": "图标库",
      "mode_custom_svg": "自定义SVG",
      "select_icon": "选择图标",
      "browse_icons": "浏览图标库",
      "icon_library_title": "图标库",
      "icons_available": "个图标可用",
      "all_icons": "全部",
      "icon_size_label": "图标大小",
      "icon_color": "图标颜色",
      "custom_svg_label": "自定义SVG代码",
      "custom_svg_placeholder": "在此粘贴您的SVG代码...\n\n示例（建议使用24×24的viewBox）：\npath d=\"M12 2L2 7l10 5 10-5-10-5z\"\npath d=\"M2 17l10 5 10-5M2 12l10 5 10-5\"",
      "custom_svg_hint": "粘贴SVG路径或完整SVG内容。支持任意viewBox尺寸，自动识别线条图标和填充图标，图标将自动缩放和居中。",
      "custom_svg_color": "SVG颜色",
      "custom_svg_color_hint": "调节自定义SVG的颜色。智能识别线条图标（保留stroke样式）和填充图标，自动应用所选颜色。",
      "svg_resources_title": "SVG 图标资源",
      "svg_resources_desc": "从这些网站获取 SVG 代码，直接粘贴到上方使用",
      "visit_website": "访问网站",
      "text_label": "图标文字",
      "text_hint": "输入1-3个字符作为图标",
      "text_hint_new": "输入文字作为图标（建议1-5个字符效果最佳）",
      "shape_label": "图标形状",
      "shapes": {
        "square": "正方形",
        "circle": "圆形",
        "rounded": "圆角方形",
        "squircle": "超椭圆"
      },
      "font_size_label": "字体大小",
      "font_weight_label": "字体粗细",
      "font_weights": {
        "normal": "正常",
        "medium": "中等",
        "bold": "加粗"
      },
      "background_color": "背景颜色",
      "background_mode": "背景模式",
      "mode_solid": "纯色",
      "mode_multicolor": "多色几何",
      "multicolor_template": "几何模板",
      "select_template": "选择模板",
      "template_categories": "模板分类",
      "all_templates": "全部",
      "region_colors": "区域颜色",
      "show_text": "显示文字",
      "text_color": "文字颜色",
      "preset_colors": "预设颜色",
      "random": "随机",
      "preview_title": "实时预览",
      "preview_desc": "实时预览您的图标设计效果",
      "preview_size_label": "预览尺寸",
      "preview_mode_label": "预览模式",
      "preview_mode_fit": "适配显示",
      "preview_mode_actual": "实际尺寸",
      "actual_size": "实际尺寸",
      "scaled_to_fit": "已缩放适配",
      "scroll_to_view": "滚动查看完整尺寸",
      "size_preview": "多尺寸预览",
      "copy_svg": "复制SVG",
      "download_ico": "下载 ICO（多尺寸）",
      "export_title": "导出选项",
      "export_desc": "以多种尺寸和格式下载您的图标",
      "ico_download_title": "ICO 文件下载（ZIP压缩包）",
      "ico_download_desc": "每个选中尺寸单独一个ICO文件，打包下载",
      "download_selected_ico": "下载选中尺寸（ICO）",
      "download_standard_ico": "下载标准尺寸（ICO）",
      "standard_ico_desc": "标准6个尺寸，6个ICO文件",
      "ico_includes": "将生成",
      "ico_files": "个ICO文件",
      "ico_size_too_large": "请选择至少一个≤256px的尺寸用于ICO",
      "individual_sizes": "单独尺寸导出",
      "batch_download_all": "批量下载所有尺寸",
      "batch_download_all_desc": "一次性下载所有尺寸，打包成ZIP文件",
      "download_all_formats": "下载全部（SVG + PNG）",
      "only": "仅",
      "zip_includes": "ZIP包含",
      "sizes": "种尺寸",
      "formats": "种格式",
      "preview_and_download": "预览和下载",
      "batch_download_selected": "批量下载选中尺寸",
      "batch_download_selected_desc": "只下载选中的尺寸，打包成ZIP文件",
      "selected_count": "已选",
      "select_all": "全选",
      "deselect_all": "取消全选",
      "click_to_select": "点击选择/取消",
      "click_to_preview": "点击预览实际尺寸",
      "click_preview": "点击预览",
      "no_size_selected": "请至少选择一个尺寸",
      "svg_code_title": "SVG代码",
      "svg_code_desc": "复制并使用生成的SVG代码",
      "tips_title": "设计技巧",
      "tip1_title": "字母选择",
      "tip1_desc": "使用1-3个字母效果最佳。单个字母非常适合用户头像或应用图标",
      "tip2_title": "颜色对比",
      "tip2_desc": "确保文字和背景颜色之间有良好的对比度，以获得更好的可见性和可访问性",
      "tip3_title": "形状选择",
      "tip3_desc": "圆形和超椭圆形状适合用户头像，圆角方形适合应用图标",
      "tip4_title": "批量下载",
      "tip4_desc": "使用批量下载功能可一次性获取所有尺寸，打包成ZIP文件。包含SVG和PNG两种格式，分文件夹整理",
      "introduction": "字母图标设计器是一个专业的工具，用于创建简单而优雅的字母图标。非常适合用户头像、应用图标、品牌标识和占位符图片。该工具支持SVG格式，具有无限可缩放性、自定义颜色、多种形状，并可导出多种尺寸。无需任何设计软件，即可在几秒钟内生成专业的图标。",
      "features": [
        "✏️ 自定义文字内容：支持1-3个字符的个性化图标",
        "🎨 多种形状选项：正方形、圆形、圆角方形和超椭圆形状",
        "🌈 完全自定义颜色：自由选择背景和文字颜色，预设调色板",
        "📏 灵活的字体控制：可调整字体大小和粗细，实现完美外观",
        "👁️ 实时预览：从16px到128px的多尺寸图标即时预览",
        "📦 批量导出：一键导出7种常用尺寸（16px到1024px）",
        "💾 双格式支持：根据需要导出为SVG或PNG格式",
        "🎲 随机颜色生成器：通过随机颜色组合快速获得灵感"
      ],
      "faq": [
        {
          "question": "SVG格式图标有什么优势？什么时候应该使用PNG？",
          "answer": "SVG图标是矢量的，可以无限缩放而不失真，文件体积更小，支持CSS样式。它们非常适合响应式网页设计和现代应用程序。当您需要特定尺寸的固定大小图标或目标环境中SVG支持有限时，请使用PNG格式。"
        },
        {
          "question": "如何为我的图标选择合适的形状？",
          "answer": "圆形和超椭圆形状最适合用户头像和个人资料图片。圆角方形适合应用图标和标识。正方形提供更正式、专业的外观。选择时请考虑您的使用场景和品牌风格。"
        },
        {
          "question": "不同用途应该导出哪些尺寸？",
          "answer": "网页头像：64px、128px、256px。应用图标：128px、256px、512px、1024px。网站图标：16px、32px。社交媒体：256px、512px。该工具允许您一次导出所有常用尺寸。"
        },
        {
          "question": "如何确保良好的颜色对比度以提高可访问性？",
          "answer": "使用预设的颜色组合，这些组合设计时已考虑了良好的对比度。对于自定义颜色，请确保文字和背景之间有足够的对比度。浅色背景上的深色文字或深色背景上的浅色文字通常效果最佳。"
        },
        {
          "question": "我可以商业使用生成的图标吗？",
          "answer": "可以！使用此工具创建的所有图标都属于您，可以自由使用，包括商业用途。没有水印、署名要求或使用限制。"
        }
      ],
      "meta": {
        "title": "字母图标设计器 - 自定义SVG图标生成",
        "description": "在线字母图标设计工具,使用字母、颜色和形状创建自定义SVG图标,导出多种尺寸用于头像、应用图标。",
        "keywords": "图标设计器, 字母图标, 头像生成器"
      }
    },
    "hmac-generator": {
      "name": "HMAC生成器",
      "description": "HMAC消息认证码生成工具",
      "input_title": "输入配置",
      "input_desc": "配置HMAC生成参数",
      "data_label": "消息数据",
      "data_placeholder": "请输入要生成HMAC的消息数据...",
      "key_label": "密钥",
      "key_placeholder": "请输入HMAC密钥...",
      "generate_key": "生成随机密钥",
      "algorithm_label": "算法",
      "select_algorithm": "选择HMAC算法",
      "format_label": "输出格式",
      "select_format": "选择输出格式",
      "generate": "生成HMAC",
      "verify": "验证HMAC",
      "output_title": "HMAC结果",
      "output_desc": "生成的HMAC值",
      "output_placeholder": "生成的HMAC将显示在这里...",
      "hmac_result": "HMAC值",
      "algorithm_used": "使用算法",
      "output_format": "输出格式",
      "hash_length": "哈希长度",
      "characters": "字符",
      "missing_input_key": "请输入消息数据和密钥",
      "missing_verification_data": "请输入完整的验证数据",
      "tips_title": "使用说明",
      "tip1_title": "HMAC原理",
      "tip1_desc": "HMAC基于哈希函数和密钥，提供消息完整性和身份验证",
      "tip2_title": "算法选择",
      "tip2_desc": "推荐使用SHA-256或更高强度的算法",
      "tip3_title": "密钥安全",
      "tip3_desc": "HMAC的安全性依赖于密钥的保密性",
      "tip4_title": "应用场景",
      "tip4_desc": "常用于API签名、JWT验证、数据完整性校验",
      "introduction": "HMAC生成器是基于哈希的消息认证码(Hash-based Message Authentication Code)专业生成工具。HMAC结合了密码哈希函数和秘密密钥，为数据提供完整性验证和身份认证保障。作为RFC 2104标准定义的安全算法，HMAC广泛应用于API安全认证、JWT令牌验证、数字签名等关键安全场景。本工具支持多种安全哈希算法，提供灵活的输出格式，所有计算过程在本地完成，确保密钥和数据的安全性。",
      "features": [
        "🔐 支持SHA-1、SHA-256、SHA-384、SHA-512多种安全哈希算法",
        "🔑 随机密钥生成功能，提供高强度的加密密钥",
        "📝 多种输出格式支持：十六进制、Base64、二进制显示",
        "⚡ 实时HMAC计算，输入即时生成认证码",
        "🔍 HMAC验证功能，支持消息完整性校验",
        "📋 一键复制结果，方便集成到开发流程",
        "🔒 本地计算保护隐私，密钥和数据不离开浏览器",
        "📱 响应式界面设计，支持移动端和桌面端操作"
      ],
      "faq": [
        {
          "question": "HMAC是什么？它与普通哈希函数有什么区别？",
          "answer": "HMAC(Hash-based Message Authentication Code)是基于哈希函数的消息认证码，它结合了密码哈希函数和秘密密钥。与普通哈希函数不同，HMAC需要密钥参与计算，提供消息完整性验证和发送方身份认证。即使攻击者知道原始消息和HMAC值，没有密钥也无法伪造有效的HMAC。"
        },
        {
          "question": "选择哪种哈希算法更安全？SHA-1还是SHA-256？",
          "answer": "强烈推荐使用SHA-256或更高强度的算法。SHA-1已被证明存在碰撞漏洞，不再被认为是安全的。SHA-256提供256位输出，具有更高的安全性和抗碰撞能力。对于高安全要求的应用，可以选择SHA-384或SHA-512。大多数现代API和安全标准都要求至少使用SHA-256。"
        },
        {
          "question": "HMAC密钥应该如何生成和管理？",
          "answer": "HMAC密钥应该是随机生成的，长度至少等于所选哈希函数的输出长度（SHA-256需要32字节）。我们的工具提供安全的随机密钥生成功能。在实际应用中，密钥应该安全存储，定期轮换，使用专业的密钥管理系统，并通过安全渠道分发。绝不能在代码中硬编码或明文传输密钥。"
        },
        {
          "question": "HMAC在API认证中如何使用？",
          "answer": "在API认证中，通常将请求的关键信息（如HTTP方法、URL、时间戳、请求体）组合成字符串，然后使用共享密钥生成HMAC签名。服务器收到请求后，使用相同方法计算HMAC并与提供的签名比较。这确保了请求未被篡改且来自授权方。常见的实现包括AWS签名、GitHub Webhook、OAuth等。"
        },
        {
          "question": "如何验证HMAC的正确性？",
          "answer": "验证HMAC需要重新计算并比较结果。使用相同的消息、密钥和算法重新生成HMAC，然后与原始HMAC进行比较。重要的是使用恒定时间比较算法，避免时序攻击。我们的工具提供验证功能，可以输入原始数据、密钥和期望的HMAC值进行验证，确保数据完整性。"
        }
      ],
      "meta": {
        "title": "HMAC生成器 - API签名与消息认证",
        "description": "在线HMAC生成工具,支持多种哈希算法,生成API签名和消息认证码,确保数据完整性和身份验证。",
        "keywords": "HMAC生成器, API签名, 消息认证"
      }
    },
    "ip-lookup": {
      "name": "IP地址查询",
      "description": "查询IP地址的地理位置和网络信息",
      "input_title": "IP地址输入",
      "output_title": "查询结果",
      "placeholder": "请输入IP地址 (例: 8.8.8.8)",
      "output_placeholder": "查询结果将显示在这里...",
      "current_ip": "您的IP地址",
      "query_button": "查询",
      "auto_detect": "自动检测",
      "invalid_ip": "无效的IP地址格式",
      "query_failed": "查询失败，请稍后重试",
      "querying": "查询中...",
      "rate_limited": "查询过于频繁，请稍后重试",
      "network_error": "网络连接错误",
      "info": {
        "basic": "基本信息",
        "location": "地理位置", 
        "network": "网络信息",
        "security": "安全信息",
        "ip_address": "IP地址",
        "country": "国家",
        "region": "地区",
        "city": "城市", 
        "postal_code": "邮政编码",
        "latitude": "纬度",
        "longitude": "经度",
        "timezone": "时区",
        "isp": "网络提供商",
        "organization": "组织",
        "as_number": "AS号",
        "proxy": "代理服务器",
        "mobile": "移动网络",
        "yes": "是",
        "no": "否"
      },
      "actions": {
        "copy_ip": "复制IP地址",
        "copy_all": "复制所有信息",
        "export_json": "导出JSON",
        "clear_results": "清除结果"
      },
      "introduction": "IP地址查询工具是专业的网络地理位置分析工具，能够快速获取任意IP地址的详细信息。包括地理位置、网络提供商、时区信息、代理检测等多维度数据。广泛应用于网络安全分析、访客统计、地域限制、欺诈检测等场景。支持IPv4和IPv6地址查询，提供准确的地理定位和网络拓扑信息，是网络管理员和开发者的必备工具。",
      "features": [
        "🌍 全球IP地址数据库，覆盖IPv4和IPv6",
        "📍 精确地理定位，包含国家、地区、城市信息",
        "🏢 详细ISP信息，显示网络提供商和组织",
        "🕒 时区信息查询，支持全球时区显示",
        "🛡️ 代理和VPN检测，识别匿名网络",
        "📱 移动网络识别，区分运营商和网络类型",
        "⚡ 实时查询响应，毫秒级数据返回",
        "📋 一键复制结果，支持多格式导出"
      ],
      "faq": [
        {
          "question": "IP地址查询的准确性如何？",
          "answer": "IP地理定位的准确性取决于数据库质量和IP分配方式：1）国家级准确率通常在95%以上；2）城市级准确率约为70-80%；3）企业专线IP定位更准确；4）移动网络IP可能存在偏差；5）VPN和代理IP会显示服务器位置而非真实位置。我们使用多个权威数据源确保数据准确性。"
        },
        {
          "question": "为什么有些IP查询结果显示不准确？",
          "answer": "IP定位不准确的常见原因：1）使用了VPN或代理服务；2）移动网络的动态IP分配；3）企业内网通过NAT访问；4）运营商的IP地址池跨区域分配；5）数据库更新滞后。对于重要应用建议结合其他定位方式验证。"
        },
        {
          "question": "查询IP地址时会暴露我的隐私吗？",
          "answer": "使用我们的IP查询工具是安全的：1）查询过程完全匿名，不记录用户信息；2）不保存查询历史和结果数据；3）支持HTTPS加密传输；4）仅返回公开的地理和网络信息；5）不涉及个人隐私数据。但请注意合理使用，尊重他人隐私。"
        },
        {
          "question": "如何检测IP是否使用了代理或VPN？",
          "answer": "代理和VPN检测原理：1）检查已知的代理服务器IP库；2）分析网络延迟和路由路径异常；3）检测匿名化服务的特征；4）对比IP归属和实际访问地理位置；5）识别商业VPN服务提供商。我们的工具会在结果中标注检测到的代理状态。"
        },
        {
          "question": "IPv6地址也能查询地理位置吗？",
          "answer": "支持IPv6地址查询，但存在一些差异：1）IPv6地理数据库相对较新，覆盖面在持续扩大；2）定位精度可能略低于IPv4；3）很多IPv6地址还未分配或使用；4）企业和教育网的IPv6分配更规整；5）随着IPv6普及，数据准确性在不断提升。建议优先查询活跃的IPv6地址。"
        }
      ],
      "meta": {
        "title": "IP地址查询工具 - 查询地理位置与网络信息",
        "description": "在线IP地址查询工具,获取IP地址的地理位置、ISP信息、时区等详细信息。",
        "keywords": "IP查询, IP地址, 地理位置"
      }
    },
    "time-converter": {
      "name": "毫秒时间转换器",
      "description": "在毫秒时间戳与 yyyy-MM-dd HH:mm:ss 字符串之间转换。",
      "from_milliseconds_title": "毫秒 → 日期字符串",
      "from_milliseconds_description": "输入毫秒值即可查看格式化的本地时间字符串。",
      "milliseconds_input_label": "毫秒值",
      "milliseconds_placeholder": "示例：1735689600000",
      "milliseconds_hint": "支持正负整数，按照本地时区解析。",
      "use_current_milliseconds": "使用当前毫秒值",
      "invalid_milliseconds": "请输入有效的毫秒数。",
      "formatted_time_label": "格式化时间（yyyy-MM-dd HH:mm:ss）",
      "from_string_title": "日期字符串 → 毫秒",
      "from_string_description": "按照 yyyy-MM-dd HH:mm:ss 格式输入字符串，转换回毫秒时间戳。",
      "string_input_label": "日期字符串",
      "string_hint": "使用 24 小时制，例如 2025-01-01 08:30:45。",
      "use_current_string": "填入当前时间字符串",
      "invalid_string": "日期字符串必须符合 yyyy-MM-dd HH:mm:ss 格式并且为真实时间。",
      "milliseconds_output_label": "毫秒结果",
      "normalized_label": "标准化",
      "quick_reference_title": "快捷参考",
      "quick_reference_description": "快速获取当前时间的字符串与毫秒值，方便日志或脚本使用。",
      "current_time_label": "当前时间字符串",
      "current_milliseconds_label": "当前毫秒值",
      "copy_current_string": "复制时间字符串",
      "copy_current_milliseconds": "复制毫秒值",
      "fill_with_latest": "填充最新时间",
      "introduction": "毫秒时间转换器帮助开发者在原始时间戳与可读日期之间迅速切换，保持统一格式，适用于日志排查、接口调试和自动化脚本。",
      "features": [
        "🔁 毫秒值与 yyyy-MM-dd HH:mm:ss 字符串双向转换。",
        "🕒 输入即时验证，避免格式错误导致的解析失败。",
        "⚡ 一键填充与复制当前时间，提升日常效率。",
        "🧭 支持负毫秒值，可用于查看 1970 年之前的日期。",
        "🌍 与浏览器本地时区保持一致，所见即所得。"
      ],
      "faq": [
        {
          "question": "转换使用的时区是什么？",
          "answer": "所有转换都基于浏览器所在的本地时区。字符串展示的是本地时间，毫秒值则与 JavaScript Date 对象一致。"
        },
        {
          "question": "日期字符串可以包含毫秒部分吗？",
          "answer": "当前版本仅支持秒级格式。如果需要毫秒精度，可以直接在毫秒输入框中处理，字符串会以秒精度展示。"
        }
      ],
      "meta": {
        "title": "时间戳转换器 - 毫秒与日期字符串互转",
        "description": "免费的在线工具,快速将毫秒时间戳转换为yyyy-MM-dd HH:mm:ss字符串,并支持反向转换与验证。",
        "keywords": "时间戳转换, 毫秒转换, 时间工具"
      }
    },
    "cron-expression-parser": {
      "name": "Cron 表达式解析器",
      "description": "校验 Cron 语法并预览即将执行的时间。",
      "format_title": "Cron 表达式格式说明",
      "format_description": "了解 Cron 表达式的基本结构和特殊字符含义。",
      "format": {
        "minute_desc": "分钟 (0 - 59)",
        "hour_desc": "小时 (0 - 23)",
        "day_desc": "日 (1 - 31)",
        "month_desc": "月 (1 - 12) 或者 JAN, FEB ...",
        "weekday_desc": "周 (0 - 6, 周日=0) 或者 SUN, MON ...",
        "symbols": {
          "wildcard": "任意值",
          "range": "数值范围 (例如: 1-10)",
          "list": "数值列表 (例如: 1,10)",
          "step": "步进值 (例如: */10)"
        }
      },
      "input_title": "Cron 表达式",
      "input_description": "输入标准的 5 段 Cron 表达式，解析各字段并查看未来的执行时间。",
      "expression_label": "表达式",
      "expression_hint": "支持 “分 时 日 月 周” 五段格式，可使用 JAN、MON 等英文名称。",
      "presets": {
        "workday_morning": "工作日早上 9 点",
        "every_fifteen_minutes": "每 15 分钟一次"
      },
      "preview_count_label": "预览数量 (1-20)",
      "current_time_label": "参考时间",
      "structure_title": "字段解析",
      "structure_description": "查看每个字段展开后的具体数值。",
      "table": {
        "field": "字段",
        "raw": "原始值",
        "values": "取值"
      },
      "fields": {
        "minute": "分钟",
        "hour": "小时",
        "day_of_month": "日期",
        "month": "月份",
        "day_of_week": "星期",
        "any": "任意"
      },
      "errors": {
        "empty": "请输入 Cron 表达式后再解析。",
        "invalid_field_count": "Cron 表达式必须包含 5 段（分钟 小时 日期 月份 星期）。",
        "invalid_field": "字段 {field} 包含不支持的语法或超出范围的数值。"
      },
      "upcoming_title": "未来执行时间",
      "upcoming_description": "结合当前时区预览接下来几次的执行时间。",
      "upcoming_placeholder": "请输入有效表达式以查看执行时间。",
      "upcoming_empty": "在未来一年内未找到匹配的执行时间，请尝试调整表达式。",
      "occurrence_index": "第 {index} 次",
      "introduction": "Cron 表达式解析器帮助开发者快速验证计划任务，了解每个字段的展开结果，并预览即将执行的时间。工具支持常见的 UNIX 风格语法以及英文月份、星期名称，让自动化调试更加高效可靠。",
      "features": [
        "🧭 实时校验并明确提示出错字段。",
        "📅 直观展示分钟、小时、日期、月份和星期的实际取值。",
        "⏱ 支持生成最多 20 条未来执行时间，自动使用本地时区。",
        "🔁 内置常用计划任务预设，快速切换参考示例。",
        "🌐 同时支持数字与 JAN-DEC、MON-SUN 等英文名称。"
      ],
      "faq": [
        {
          "question": "工具支持哪种 Cron 格式？",
          "answer": "解析器遵循传统的五段 UNIX Cron 格式：分钟、小时、日期、月份、星期。目前不支持包含秒或 Quartz 扩展字段的表达式。"
        },
        {
          "question": "日期和星期字段如何共同作用？",
          "answer": "当两个字段都为具体取值（非 * 或 ?）时，只要日期或星期任意一个匹配即可执行。这与大多数 Linux Cron 的行为一致。如需忽略某个字段，可使用 ?。"
        }
      ],
      "meta": {
        "title": "Cron表达式解析器 - 在线验证测试",
        "description": "免费的Cron表达式在线解析工具,支持语法校验、字段展开以及未来执行时间预览。",
        "keywords": "Cron表达式, 任务调度, Cron校验"
      }
    },
    "curl-converter": {
      "name": "cURL 命令转换器",
      "description": "将 cURL 命令转换为各种编程语言的代码，并可直接测试请求",
      "input_title": "输入 cURL 命令",
      "input_desc": "粘贴或输入 cURL 命令",
      "input_placeholder": "请输入 cURL 命令...\n例如: curl -X POST https://api.example.com/users \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"name\":\"John\",\"email\":\"john@example.com\"}'",
      "output_title": "生成的代码",
      "output_desc": "转换后的代码将显示在这里",
      "output_placeholder": "转换后的代码将显示在这里...",
      "convert_button": "转换代码",
      "test_button": "测试请求",
      "test_result_title": "请求结果",
      "test_result_desc": "API 请求的响应结果",
      "language_label": "目标语言",
      "invalid_command": "无效的 cURL 命令",
      "conversion_failed": "转换失败，请检查命令格式",
      "test_failed": "请求失败",
      "tips_title": "使用说明",
      "tip1_title": "命令格式",
      "tip1_desc": "支持标准的 cURL 命令，包括各种参数和选项",
      "tip2_title": "支持的参数",
      "tip2_desc": "支持 -X/-H/-d/--data/--header 等常用参数",
      "tip3_title": "多语言支持",
      "tip3_desc": "支持转换为 JavaScript、Python、Node.js、PHP、Go 等语言",
      "tip4_title": "在线测试",
      "tip4_desc": "通过服务器代理测试 API 请求，无 CORS 限制，查看完整响应",
      "introduction": "cURL 命令转换器是专为开发者设计的实用工具，能够快速将 cURL 命令转换为多种编程语言的 HTTP 请求代码。支持 JavaScript Fetch、Python Requests、Node.js Axios、PHP cURL、Go net/http 等主流语言和框架。不仅可以生成代码，还能直接在浏览器中测试 API 请求，查看响应结果。无论是 API 调试、文档编写还是代码迁移，都能大幅提升开发效率。",
      "features": [
        "🔄 智能解析 cURL 命令，支持多种参数格式",
        "💻 支持多种编程语言：JavaScript、Python、Node.js、PHP、Go",
        "🎯 自动识别 HTTP 方法、请求头、请求体等参数",
        "⚡ 实时转换，即时生成可用的代码",
        "🧪 内置请求测试功能，通过服务器代理无 CORS 限制",
        "📋 一键复制生成的代码到剪贴板",
        "💾 支持下载为对应语言的源文件",
        "🔒 本地处理，确保 API 密钥和数据安全"
      ],
      "faq": [
        {
          "question": "为什么需要 cURL 转换工具？",
          "answer": "在 API 开发和测试中，很多文档和工具（如 Postman）都会提供 cURL 命令示例。本工具可以快速将这些 cURL 命令转换为实际项目中使用的编程语言代码，避免手动编写，减少错误，提高效率。特别适合需要快速集成第三方 API 的场景。"
        },
        {
          "question": "工具支持哪些 cURL 参数？",
          "answer": "工具支持常用的 cURL 参数，包括：-X/--request（HTTP 方法）、-H/--header（请求头）、-d/--data/--data-raw（请求体）、URL 等。对于不常用的参数，可以在转换后的代码基础上手动调整。"
        },
        {
          "question": "生成的代码可以直接使用吗？",
          "answer": "生成的代码遵循各语言的标准实践，大多数情况下可以直接使用。但建议根据实际项目需求进行适当调整：1）验证 API 端点和参数；2）添加错误处理逻辑；3）根据需要调整超时设置；4）处理响应数据格式；5）添加必要的环境变量和配置。"
        },
        {
          "question": "如何处理包含敏感信息的 cURL 命令？",
          "answer": "所有转换操作都在您的浏览器本地完成，命令内容不会上传到任何服务器。但仍建议：1）转换前移除或替换敏感的 API 密钥和 token；2）使用环境变量管理敏感配置；3）不要在代码中硬编码密码和密钥；4）生成的代码不要直接提交到公共代码仓库；5）使用项目配置文件管理 API 凭证。"
        },
        {
          "question": "测试功能有什么限制？",
          "answer": "测试功能通过服务器端代理发送请求，已解决 CORS 跨域问题。但仍有以下注意事项：1）某些需要特殊认证的 API 可能需要配置正确的认证信息；2）请求超时时间为默认值，超大响应可能需要较长时间；3）测试功能适合快速验证 API 是否可访问和响应格式；4）对于生产环境的详细测试，建议使用专业工具如 Postman 或 Insomnia。"
        }
      ],
      "meta": {
        "title": "cURL命令转换器 - 转JS/Python/PHP等",
        "description": "在线cURL命令转换工具,快速将cURL命令转换为JavaScript、Python、Node.js、PHP、Go等语言代码,支持在线测试。",
        "keywords": "cURL转换, API测试, 代码生成"
      }
    },
    "color-converter": {
      "name": "颜色转换器",
      "description": "在 HEX、RGB、HSL 和 CSS 颜色名称之间转换",
      "input_title": "输入颜色",
      "input_desc": "输入任意格式的颜色值",
      "input_placeholder": "输入颜色值，例如：#FF5733、rgb(255, 87, 51)、hsl(9, 100%, 60%) 或 red",
      "output_title": "转换结果",
      "color_preview": "颜色预览",
      "hex_format": "HEX 格式",
      "rgb_format": "RGB 格式",
      "hsl_format": "HSL 格式",
      "css_name": "CSS 颜色名称",
      "invalid_color": "无效的颜色值",
      "no_css_name": "无对应的 CSS 颜色名称",
      "tips_title": "使用说明",
      "tip1_title": "支持的格式",
      "tip1_desc": "支持 HEX (#RGB, #RRGGBB)、RGB、HSL 和 CSS 颜色名称",
      "tip2_title": "自动识别",
      "tip2_desc": "自动识别输入的颜色格式并转换为其他格式",
      "tip3_title": "实时预览",
      "tip3_desc": "实时显示颜色预览和所有格式的转换结果",
      "tip4_title": "快速复制",
      "tip4_desc": "点击复制按钮快速复制各种格式的颜色值",
      "introduction": "颜色转换器是专业的颜色格式转换工具，支持在 HEX、RGB、HSL 和 CSS 颜色名称之间自由转换。无论您是网页设计师、前端开发者还是 UI/UX 设计师，都能快速获取所需格式的颜色值。工具提供实时颜色预览，支持一键复制各种格式，大幅提升设计和开发效率。",
      "features": [
        "🎨 支持 HEX、RGB、HSL、CSS 颜色名称多种格式",
        "🔄 智能识别输入格式，自动转换为其他格式",
        "👁️ 实时颜色预览，直观查看颜色效果",
        "📋 一键复制各种格式的颜色值",
        "⚡ 实时转换，输入即时显示结果",
        "🎯 精确的颜色值计算和转换",
        "🌈 支持 140+ 标准 CSS 颜色名称",
        "📱 响应式设计，移动端完美适配"
      ],
      "faq": [
        {
          "question": "支持哪些颜色格式？",
          "answer": "工具支持四种主要格式：1) HEX 格式（如 #FF5733 或 #F53）；2) RGB 格式（如 rgb(255, 87, 51)）；3) HSL 格式（如 hsl(9, 100%, 60%)）；4) CSS 颜色名称（如 red、blue、cornflowerblue 等 140+ 标准颜色名称）。"
        },
        {
          "question": "HEX、RGB 和 HSL 有什么区别？",
          "answer": "HEX 是十六进制颜色表示，常用于 CSS 和设计工具。RGB 基于红绿蓝三原色，每个通道 0-255。HSL 基于色相、饱和度、亮度，更符合人类对颜色的直观理解，便于调整颜色的明暗和鲜艳程度。"
        },
        {
          "question": "如何使用 CSS 颜色名称？",
          "answer": "直接输入标准 CSS 颜色名称即可，如 red、blue、green、coral 等。工具会自动识别并转换为其他格式。需要注意的是，只有 140+ 个标准 CSS 颜色有对应的名称，其他颜色会显示'无对应的 CSS 颜色名称'。"
        },
        {
          "question": "转换结果的精确度如何？",
          "answer": "工具使用标准的颜色转换算法，确保转换结果的精确性。RGB 和 HEX 之间是无损转换，HSL 与 RGB 之间可能会有微小的精度差异（通常小于 1），但在实际使用中可以忽略不计。"
        },
        {
          "question": "为什么有些颜色没有对应的 CSS 名称？",
          "answer": "CSS 只定义了 147 个标准颜色名称（包括 transparent），其他数百万种颜色都没有对应的名称。如果您输入的颜色不在标准颜色列表中，工具会显示'无对应的 CSS 颜色名称'，但仍会正常显示 HEX、RGB 和 HSL 格式。"
        }
      ],
      "meta": {
        "title": "颜色转换器 - HEX RGB HSL CSS格式转换",
        "description": "在线颜色格式转换工具,支持HEX、RGB、HSL和CSS颜色名称之间的互相转换,实时预览,一键复制。",
        "keywords": "颜色转换器, HEX转RGB, 颜色格式"
      }
    },
    "docker-run-to-compose": {
      "name": "Docker Run 转 Compose",
      "description": "将 docker run 命令转换为 docker-compose.yml 格式",
      "input_title": "输入 Docker Run 命令",
      "input_desc": "粘贴或输入 docker run 命令",
      "input_placeholder": "请输入 docker run 命令...\n例如: docker run -d -p 8080:80 --name my-nginx -v /data:/usr/share/nginx/html nginx:latest",
      "output_title": "Docker Compose 配置",
      "output_desc": "生成的 docker-compose.yml 内容",
      "output_placeholder": "转换后的 docker-compose.yml 将显示在这里...",
      "convert_button": "转换为 Compose",
      "invalid_command": "无效的 docker run 命令",
      "conversion_failed": "转换失败，请检查命令格式",
      "tips_title": "使用说明",
      "tip1_title": "命令格式",
      "tip1_desc": "支持标准的 docker run 命令，包括各种参数和选项",
      "tip2_title": "支持的参数",
      "tip2_desc": "支持 -p/-d/-v/-e/--name/--network/--restart 等常用参数",
      "tip3_title": "镜像名称",
      "tip3_desc": "确保命令中包含有效的镜像名称和标签",
      "tip4_title": "数据安全",
      "tip4_desc": "所有转换在本地完成，命令和配置不会上传到服务器",
      "introduction": "Docker Run 转 Compose 工具是专为 Docker 用户设计的命令转换工具，能够快速将 docker run 命令转换为标准的 docker-compose.yml 配置文件格式。docker-compose 相比直接使用 docker run 命令，具有配置清晰、易于管理、支持多容器编排等优势。本工具智能解析 docker run 命令中的各种参数，自动生成规范的 YAML 配置，大幅提升 Docker 容器管理效率，是 DevOps 和开发者的得力助手。",
      "features": [
        "🔄 智能解析 docker run 命令，支持多种参数格式",
        "📝 自动生成标准 docker-compose.yml 配置文件",
        "🎯 支持端口映射、卷挂载、环境变量等常用配置",
        "⚡ 实时转换，即时生成可用的 compose 配置",
        "📋 一键复制生成的配置到剪贴板",
        "💾 支持直接下载为 docker-compose.yml 文件",
        "🔒 本地处理，确保命令和配置安全",
        "📱 响应式设计，支持移动端和桌面端"
      ],
      "faq": [
        {
          "question": "为什么要将 docker run 转换为 docker-compose？",
          "answer": "docker-compose 提供了更好的配置管理方式：1）配置文件化，便于版本控制和团队协作；2）支持多容器编排，可以定义服务依赖关系；3）一键启动和停止所有服务；4）配置更清晰易读，便于维护和修改；5）支持环境变量和配置复用。对于需要长期维护的项目，使用 docker-compose 是最佳实践。"
        },
        {
          "question": "工具支持哪些 docker run 参数？",
          "answer": "工具支持大部分常用参数，包括：-p/--publish（端口映射）、-v/--volume（卷挂载）、-e/--env（环境变量）、--name（容器名称）、-d/--detach（后台运行）、--restart（重启策略）、--network（网络配置）、--link（容器链接）、--workdir（工作目录）、--user（用户）等。对于不支持的参数，工具会保留原始命令供手动调整。"
        },
        {
          "question": "生成的 docker-compose.yml 可以直接使用吗？",
          "answer": "生成的配置文件遵循 docker-compose 规范，大多数情况下可以直接使用。但建议检查并根据实际需求调整：1）验证端口映射是否正确；2）检查卷挂载路径；3）确认环境变量设置；4）根据需要添加网络配置、资源限制等高级选项；5）对于复杂场景可能需要手动优化配置结构。"
        },
        {
          "question": "如何处理包含敏感信息的命令？",
          "answer": "所有转换操作都在您的浏览器本地完成，命令内容不会上传到任何服务器。但仍建议：1）转换前移除敏感的密码和密钥；2）使用环境变量文件(.env)管理敏感配置；3）生成的配置文件不要包含明文密码；4）将 docker-compose.yml 添加到 .gitignore 如果包含敏感信息；5）使用 Docker secrets 管理生产环境的敏感数据。"
        },
        {
          "question": "转换失败怎么办？如何解决？",
          "answer": "转换失败的常见原因和解决方法：1）检查命令是否以 'docker run' 开头；2）确保包含镜像名称；3）检查参数格式是否正确（如 -p 8080:80）；4）移除命令中的特殊字符和转义符；5）尝试简化命令，逐步添加参数；6）参考工具提供的示例命令格式。如果问题持续，可以手动创建基础配置后再调整。"
        }
      ],
      "meta": {
        "title": "Docker Run转Compose工具 - 命令转YAML配置",
        "description": "在线Docker Run命令转换工具,快速将docker run命令转换为docker-compose.yml配置文件,提升容器管理效率。",
        "keywords": "Docker Compose, 容器编排, Docker转换"
      }
    },
    "base64-file-converter": {
      "name": "Base64图片转换器",
      "description": "图片与Base64编码相互转换工具",
      "image_description": "专业的图片Base64编码转换工具，支持JPG、PNG、GIF、WebP等常见图片格式",
      "image_to_base64": "图片转Base64",
      "base64_to_image": "Base64转图片",
      "upload_image": "上传图片",
      "drag_image": "拖拽图片到此处或点击选择图片",
      "supported_formats": "支持 JPG、PNG、GIF、WebP、SVG、BMP 格式，最大5MB",
      "image_info": "图片信息",
      "image_name": "图片名称",
      "image_size": "图片大小",
      "image_type": "图片类型",
      "download_image": "下载图片",
      "convert_to_image": "转换为图片",
      "convert_to_see_image": "点击转换按钮查看图片",
      "copy_base64": "复制Base64",
      "base64_input": "Base64输入",
      "base64_output": "Base64输出",
      "base64_input_placeholder": "请粘贴Base64编码内容...",
      "base64_output_placeholder": "Base64编码结果将显示在这里...",
      "input_title": "输入区域",
      "output_title": "输出结果",
      "output_desc": "转换后的结果",
      "image_preview": "图片预览",
      "no_image_selected": "未选择图片",
      "invalid_base64": "无效的Base64格式",
      "image_too_large": "图片过大，建议小于5MB",
      "invalid_image_format": "不支持的图片格式，请选择 JPG、PNG、GIF、WebP、SVG 或 BMP 格式",
      "convert_success": "转换成功",
      "mode_switch": "转换模式",
      "tips_title": "使用说明",
      "tip1_title": "图片转Base64",
      "tip1_desc": "选择图片文件，系统会自动转换为Base64编码，适用于CSS Data URLs、网页开发、数据传输等场景。",
      "tip2_title": "Base64转图片",
      "tip2_desc": "粘贴Base64编码内容，可以还原为原始图片并查看预览或下载。",
      "tip3_title": "图片大小限制",
      "tip3_desc": "为保证转换性能，建议上传的图片大小不超过5MB。",
      "tip4_title": "安全隐私",
      "tip4_desc": "所有转换操作都在浏览器本地完成，图片不会上传到服务器，确保数据安全。",
      "introduction": "Base64图片转换器是专业的图片编码转换工具，支持JPG、PNG、GIF、WebP等图片格式与Base64编码之间的双向转换。广泛应用于Web开发、网页设计、邮件嵌入图片、API接口等场景。采用浏览器本地处理，确保图片安全性和隐私保护，是开发者和设计师的必备工具。",
      "features": [
        "🔄 支持图片与Base64的双向转换",
        "🖼️ 支持多种图片格式（JPG、PNG、GIF、WebP、SVG、BMP）",
        "🎯 实时转换，即时显示结果",
        "🔒 本地处理，确保文件隐私安全",
        "📱 响应式设计，支持移动端操作",
        "💾 实时预览和一键下载转换后的图片",
        "📋 便捷的Base64代码复制功能",
        "🚀 高性能处理，支持大图片转换"
      ],
      "faq": [
        {
          "question": "Base64图片转换器支持哪些图片格式？",
          "answer": "工具支持所有主流图片格式的转换，包括JPEG、JPG、PNG、GIF、WebP、SVG、BMP等格式。无论什么格式，都能准确转换为Base64编码，并且可以完美还原为原始图片。工具会自动检测图片类型并优化转换过程。"
        },
        {
          "question": "图片大小有什么限制？为什么要限制？",
          "answer": "为了确保最佳的转换性能和用户体验，建议单个图片不超过10MB。这个限制主要考虑：1）浏览器内存使用效率；2）转换速度和响应性；3）避免页面卡顿。对于更大的图片，建议先进行压缩或缩放处理。"
        },
        {
          "question": "Base64编码后图片会变大多少？",
          "answer": "Base64编码会使图片大小增加约33%。这是因为Base64使用64个可打印字符表示256种字节值，每3个原始字节被编码为4个Base64字符。虽然体积增大，但获得了在文本协议中传输二进制图片数据的能力，这在CSS Data URLs和Web开发中非常有用。"
        },
        {
          "question": "转换过程安全吗？图片会被上传到服务器吗？",
          "answer": "完全安全！所有转换操作都在您的浏览器本地完成，图片内容从未离开您的设备。我们不会上传、存储或记录任何图片数据。这种本地处理方式确保了最高级别的隐私保护，适合处理敏感图片和个人照片。"
        },
        {
          "question": "如何验证转换后的Base64编码是否正确？",
          "answer": "可以通过以下方式验证：1）使用我们的Base64转图片功能进行反向验证；2）检查Base64字符串是否只包含A-Z、a-z、0-9、+、/、=字符；3）验证字符串长度是否为4的倍数；4）对于图片，可以将Base64作为Data URL在浏览器中预览图片效果。"
        }
      ],
      "meta": {
        "title": "Base64图片转换器 - 图片与编码互转",
        "description": "在线Base64图片转换工具,支持图片与Base64编码的双向转换,适用于Web开发和数据嵌入。",
        "keywords": "Base64图片, 图片编码, Base64转换"
      }
    },
    "image-to-dot-matrix": {
      "name": "图片转点阵图",
      "description": "将图片或文字转换为点阵图效果，支持多种风格",
      "mode_title": "输入模式",
      "mode_desc": "选择使用图片或文字生成点阵图",
      "mode_image": "图片模式",
      "mode_text": "文字模式",
      "upload_title": "上传图片",
      "upload_desc": "选择或拖拽图片文件",
      "text_input_title": "文字输入",
      "text_input_desc": "输入要转换的文字内容",
      "text_content_label": "文字内容",
      "text_placeholder": "输入文字、字母或数字...",
      "font_size_label": "字体大小",
      "font_weight_label": "字体粗细",
      "font_family_label": "字体",
      "font_normal": "正常",
      "font_bold": "粗体",
      "no_text_input": "请输入文字内容",
      "settings_title": "点阵设置",
      "settings_desc": "自定义点阵效果参数",
      "preview_title": "点阵预览",
      "preview_desc": "实时预览点阵效果",
      "original_preview": "原始图片",
      "drag_image": "拖拽图片到此处或点击选择",
      "supported_formats": "支持 JPG、PNG、GIF、WebP 格式，最大 10MB",
      "no_image": "未选择图片",
      "image_info": "图片信息",
      "original_size": "原始尺寸",
      "file_size": "文件大小",
      "dot_size_label": "点大小",
      "dot_size_hint": "点的直径大小（像素）",
      "dot_spacing_label": "点间距",
      "dot_spacing_hint": "点之间的间距",
      "dot_shape_label": "点形状",
      "shape_circle": "圆形",
      "shape_square": "方形",
      "shape_diamond": "菱形",
      "shape_hexagon": "六边形",
      "color_mode_label": "颜色模式",
      "mode_grayscale": "灰度",
      "mode_blackwhite": "黑白",
      "mode_color": "彩色",
      "threshold_label": "黑白阈值",
      "threshold_hint": "黑白模式下的灰度阈值（0-255）",
      "invert_label": "反转颜色",
      "background_label": "背景颜色",
      "background_transparent": "透明",
      "background_white": "白色",
      "background_black": "黑色",
      "background_custom": "自定义",
      "processing": "处理中...",
      "generate_button": "生成点阵图",
      "download_png": "下载 PNG",
      "download_svg": "下载 SVG",
      "copy_image": "复制图片",
      "reset": "重置设置",
      "image_too_large": "图片过大，请选择小于 10MB 的文件",
      "invalid_format": "不支持的图片格式",
      "generation_failed": "生成失败，请重试",
      "tips_title": "使用说明",
      "tip1_title": "点大小",
      "tip1_desc": "较小的点值产生更精细的效果，但文件会更大。建议从 3-5 像素开始尝试",
      "tip2_title": "颜色模式",
      "tip2_desc": "灰度模式保留明暗层次，黑白模式产生高对比效果，彩色模式保留原色",
      "tip3_title": "点形状",
      "tip3_desc": "不同形状产生不同艺术效果。圆形最常见，方形适合像素风，菱形和六边形更有创意",
      "tip4_title": "导出格式",
      "tip4_desc": "PNG 适合直接使用，SVG 是矢量格式可无限放大不失真",
      "introduction": "图片转点阵图工具是专业的图片艺术效果生成器，将普通图片转换为独特的点阵风格图像。支持多种点的形状、颜色模式和参数调整，可以创造出复古、现代、艺术等多种视觉效果。广泛应用于平面设计、海报制作、网页设计、印刷品等领域，是设计师和创意工作者的得力助手。",
      "features": [
        "🖼️ 支持 JPG、PNG、GIF、WebP 多种图片格式",
        "⚙️ 灵活的点阵参数：大小、间距、形状可调",
        "🎨 多种颜色模式：灰度、黑白、彩色",
        "🔷 四种点形状：圆形、方形、菱形、六边形",
        "👁️ 实时预览，即时查看效果",
        "💾 双格式导出：PNG 位图和 SVG 矢量图",
        "🔒 本地处理，确保图片隐私安全",
        "⚡ 高性能处理，支持大尺寸图片"
      ],
      "faq": [
        {
          "question": "点阵图适用于哪些场景？",
          "answer": "点阵图广泛应用于：1）复古风格设计，模拟早期印刷效果；2）现代艺术创作，产生独特视觉效果；3）网页设计背景和装饰元素；4）海报和印刷品设计；5）品牌视觉识别系统；6）数字艺术和NFT创作。点阵效果能让普通图片呈现独特的艺术感和科技感。"
        },
        {
          "question": "如何选择合适的点大小和间距？",
          "answer": "点大小和间距的选择取决于使用场景：小尺寸图片建议使用较小的点（2-4像素），大尺寸图片可以使用更大的点（5-10像素）。间距越大，图片越抽象；间距越小，细节越清晰。建议先用默认值生成，再根据效果微调。对于打印输出，可以使用更小的点以保留更多细节。"
        },
        {
          "question": "不同颜色模式有什么区别？",
          "answer": "三种颜色模式各有特点：1）灰度模式保留图片的明暗层次，适合需要丰富细节的场景；2）黑白模式只有纯黑和纯白两色，产生高对比效果，适合简洁风格和logo设计；3）彩色模式保留原图颜色，适合艺术创作和彩色印刷。选择时考虑最终用途和视觉需求。"
        },
        {
          "question": "PNG 和 SVG 格式应该如何选择？",
          "answer": "PNG 是位图格式，适合直接使用和分享，文件较大但兼容性好，适用于网页显示、社交媒体等。SVG 是矢量格式，可以无限放大不失真，文件通常更小，适合需要缩放的场景如打印、logo、图标设计。如果需要后期编辑或大幅缩放，建议选择 SVG；如果需要快速使用和分享，选择 PNG。"
        },
        {
          "question": "处理大图片时性能如何？",
          "answer": "工具经过性能优化，可以流畅处理大尺寸图片。建议图片不超过10MB以确保最佳体验。对于超大图片，点大小会自动调整以保证处理速度。所有处理都在浏览器本地完成，不会上传到服务器，确保图片安全。如果遇到性能问题，可以先缩小图片尺寸或增大点的大小。"
        }
      ],
      "meta": {
        "title": "图片转点阵图工具 - 像素艺术效果生成",
        "description": "在线图片转点阵图工具,支持多种点形状、颜色模式,生成独特的点阵艺术效果,适用于设计和创意项目。",
        "keywords": "点阵图, 像素艺术, 图片效果"
      }
    }
  },
  "seo": {
    "tool_introduction": "工具介绍",
    "tool_features": "功能特点",
    "frequently_asked_questions": "常见问题",
    "related_tools": "相关工具",
    "all_tools": "所有工具",
    "more_tools": "更多工具",
    "tools_in_category": "同类工具",
    "popular_tools": "热门工具",
    "expand": "展开",
    "collapse": "收起",
    "view_tool": "查看工具",
    "try_now": "立即使用",
    "showing_tools": "显示 {current} 个工具，共 {total} 个可用"
  }
}
